/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 64.0, "minX": 0.0, "maxY": 151783.0, "series": [{"data": [[0.0, 64.0], [0.1, 64.0], [0.2, 64.0], [0.3, 65.0], [0.4, 65.0], [0.5, 67.0], [0.6, 67.0], [0.7, 67.0], [0.8, 67.0], [0.9, 67.0], [1.0, 67.0], [1.1, 67.0], [1.2, 70.0], [1.3, 70.0], [1.4, 70.0], [1.5, 71.0], [1.6, 71.0], [1.7, 73.0], [1.8, 73.0], [1.9, 74.0], [2.0, 74.0], [2.1, 74.0], [2.2, 75.0], [2.3, 75.0], [2.4, 77.0], [2.5, 77.0], [2.6, 77.0], [2.7, 81.0], [2.8, 81.0], [2.9, 82.0], [3.0, 82.0], [3.1, 84.0], [3.2, 84.0], [3.3, 84.0], [3.4, 86.0], [3.5, 86.0], [3.6, 86.0], [3.7, 86.0], [3.8, 89.0], [3.9, 89.0], [4.0, 89.0], [4.1, 93.0], [4.2, 93.0], [4.3, 96.0], [4.4, 96.0], [4.5, 96.0], [4.6, 96.0], [4.7, 96.0], [4.8, 96.0], [4.9, 96.0], [5.0, 97.0], [5.1, 97.0], [5.2, 97.0], [5.3, 98.0], [5.4, 98.0], [5.5, 101.0], [5.6, 101.0], [5.7, 106.0], [5.8, 106.0], [5.9, 106.0], [6.0, 107.0], [6.1, 107.0], [6.2, 107.0], [6.3, 107.0], [6.4, 109.0], [6.5, 109.0], [6.6, 109.0], [6.7, 109.0], [6.8, 109.0], [6.9, 110.0], [7.0, 110.0], [7.1, 110.0], [7.2, 111.0], [7.3, 111.0], [7.4, 113.0], [7.5, 113.0], [7.6, 124.0], [7.7, 124.0], [7.8, 124.0], [7.9, 143.0], [8.0, 143.0], [8.1, 146.0], [8.2, 146.0], [8.3, 149.0], [8.4, 149.0], [8.5, 149.0], [8.6, 153.0], [8.7, 153.0], [8.8, 155.0], [8.9, 155.0], [9.0, 155.0], [9.1, 158.0], [9.2, 158.0], [9.3, 160.0], [9.4, 160.0], [9.5, 161.0], [9.6, 161.0], [9.7, 161.0], [9.8, 166.0], [9.9, 166.0], [10.0, 175.0], [10.1, 175.0], [10.2, 196.0], [10.3, 196.0], [10.4, 196.0], [10.5, 204.0], [10.6, 204.0], [10.7, 210.0], [10.8, 210.0], [10.9, 210.0], [11.0, 230.0], [11.1, 230.0], [11.2, 283.0], [11.3, 283.0], [11.4, 288.0], [11.5, 288.0], [11.6, 288.0], [11.7, 295.0], [11.8, 295.0], [11.9, 295.0], [12.0, 295.0], [12.1, 300.0], [12.2, 300.0], [12.3, 300.0], [12.4, 301.0], [12.5, 301.0], [12.6, 301.0], [12.7, 301.0], [12.8, 302.0], [12.9, 302.0], [13.0, 302.0], [13.1, 302.0], [13.2, 302.0], [13.3, 303.0], [13.4, 303.0], [13.5, 303.0], [13.6, 304.0], [13.7, 304.0], [13.8, 311.0], [13.9, 311.0], [14.0, 325.0], [14.1, 325.0], [14.2, 325.0], [14.3, 326.0], [14.4, 326.0], [14.5, 332.0], [14.6, 332.0], [14.7, 334.0], [14.8, 334.0], [14.9, 334.0], [15.0, 348.0], [15.1, 348.0], [15.2, 355.0], [15.3, 355.0], [15.4, 355.0], [15.5, 357.0], [15.6, 357.0], [15.7, 374.0], [15.8, 374.0], [15.9, 374.0], [16.0, 374.0], [16.1, 374.0], [16.2, 374.0], [16.3, 374.0], [16.4, 381.0], [16.5, 381.0], [16.6, 382.0], [16.7, 382.0], [16.8, 382.0], [16.9, 387.0], [17.0, 387.0], [17.1, 389.0], [17.2, 389.0], [17.3, 390.0], [17.4, 390.0], [17.5, 390.0], [17.6, 390.0], [17.7, 390.0], [17.8, 392.0], [17.9, 392.0], [18.0, 392.0], [18.1, 394.0], [18.2, 394.0], [18.3, 395.0], [18.4, 395.0], [18.5, 396.0], [18.6, 396.0], [18.7, 396.0], [18.8, 397.0], [18.9, 397.0], [19.0, 397.0], [19.1, 397.0], [19.2, 398.0], [19.3, 398.0], [19.4, 398.0], [19.5, 398.0], [19.6, 398.0], [19.7, 399.0], [19.8, 399.0], [19.9, 399.0], [20.0, 399.0], [20.1, 399.0], [20.2, 399.0], [20.3, 399.0], [20.4, 400.0], [20.5, 400.0], [20.6, 400.0], [20.7, 400.0], [20.8, 400.0], [20.9, 400.0], [21.0, 400.0], [21.1, 400.0], [21.2, 400.0], [21.3, 400.0], [21.4, 400.0], [21.5, 400.0], [21.6, 401.0], [21.7, 401.0], [21.8, 401.0], [21.9, 401.0], [22.0, 401.0], [22.1, 402.0], [22.2, 402.0], [22.3, 404.0], [22.4, 404.0], [22.5, 404.0], [22.6, 404.0], [22.7, 404.0], [22.8, 405.0], [22.9, 405.0], [23.0, 407.0], [23.1, 407.0], [23.2, 407.0], [23.3, 410.0], [23.4, 410.0], [23.5, 410.0], [23.6, 410.0], [23.7, 411.0], [23.8, 411.0], [23.9, 411.0], [24.0, 415.0], [24.1, 415.0], [24.2, 418.0], [24.3, 418.0], [24.4, 418.0], [24.5, 418.0], [24.6, 418.0], [24.7, 420.0], [24.8, 420.0], [24.9, 427.0], [25.0, 427.0], [25.1, 427.0], [25.2, 430.0], [25.3, 430.0], [25.4, 437.0], [25.5, 437.0], [25.6, 440.0], [25.7, 440.0], [25.8, 440.0], [25.9, 441.0], [26.0, 441.0], [26.1, 445.0], [26.2, 445.0], [26.3, 445.0], [26.4, 452.0], [26.5, 452.0], [26.6, 456.0], [26.7, 456.0], [26.8, 466.0], [26.9, 466.0], [27.0, 466.0], [27.1, 468.0], [27.2, 468.0], [27.3, 470.0], [27.4, 470.0], [27.5, 470.0], [27.6, 470.0], [27.7, 470.0], [27.8, 471.0], [27.9, 471.0], [28.0, 475.0], [28.1, 475.0], [28.2, 475.0], [28.3, 475.0], [28.4, 475.0], [28.5, 475.0], [28.6, 475.0], [28.7, 477.0], [28.8, 477.0], [28.9, 477.0], [29.0, 481.0], [29.1, 481.0], [29.2, 481.0], [29.3, 481.0], [29.4, 483.0], [29.5, 483.0], [29.6, 483.0], [29.7, 483.0], [29.8, 483.0], [29.9, 483.0], [30.0, 483.0], [30.1, 483.0], [30.2, 483.0], [30.3, 483.0], [30.4, 484.0], [30.5, 484.0], [30.6, 486.0], [30.7, 486.0], [30.8, 486.0], [30.9, 487.0], [31.0, 487.0], [31.1, 487.0], [31.2, 487.0], [31.3, 487.0], [31.4, 487.0], [31.5, 487.0], [31.6, 488.0], [31.7, 488.0], [31.8, 488.0], [31.9, 488.0], [32.0, 490.0], [32.1, 490.0], [32.2, 490.0], [32.3, 491.0], [32.4, 491.0], [32.5, 491.0], [32.6, 491.0], [32.7, 491.0], [32.8, 492.0], [32.9, 492.0], [33.0, 493.0], [33.1, 493.0], [33.2, 494.0], [33.3, 494.0], [33.4, 494.0], [33.5, 495.0], [33.6, 495.0], [33.7, 496.0], [33.8, 496.0], [33.9, 496.0], [34.0, 496.0], [34.1, 496.0], [34.2, 497.0], [34.3, 497.0], [34.4, 498.0], [34.5, 498.0], [34.6, 498.0], [34.7, 498.0], [34.8, 498.0], [34.9, 499.0], [35.0, 499.0], [35.1, 499.0], [35.2, 499.0], [35.3, 499.0], [35.4, 499.0], [35.5, 499.0], [35.6, 500.0], [35.7, 500.0], [35.8, 500.0], [35.9, 500.0], [36.0, 500.0], [36.1, 501.0], [36.2, 501.0], [36.3, 502.0], [36.4, 502.0], [36.5, 503.0], [36.6, 503.0], [36.7, 503.0], [36.8, 503.0], [36.9, 503.0], [37.0, 503.0], [37.1, 503.0], [37.2, 503.0], [37.3, 503.0], [37.4, 503.0], [37.5, 505.0], [37.6, 505.0], [37.7, 506.0], [37.8, 506.0], [37.9, 506.0], [38.0, 506.0], [38.1, 506.0], [38.2, 506.0], [38.3, 506.0], [38.4, 507.0], [38.5, 507.0], [38.6, 507.0], [38.7, 508.0], [38.8, 508.0], [38.9, 511.0], [39.0, 511.0], [39.1, 512.0], [39.2, 512.0], [39.3, 512.0], [39.4, 513.0], [39.5, 513.0], [39.6, 514.0], [39.7, 514.0], [39.8, 514.0], [39.9, 514.0], [40.0, 514.0], [40.1, 520.0], [40.2, 520.0], [40.3, 520.0], [40.4, 520.0], [40.5, 520.0], [40.6, 520.0], [40.7, 520.0], [40.8, 523.0], [40.9, 523.0], [41.0, 524.0], [41.1, 524.0], [41.2, 524.0], [41.3, 524.0], [41.4, 524.0], [41.5, 528.0], [41.6, 528.0], [41.7, 528.0], [41.8, 535.0], [41.9, 535.0], [42.0, 536.0], [42.1, 536.0], [42.2, 545.0], [42.3, 545.0], [42.4, 545.0], [42.5, 545.0], [42.6, 545.0], [42.7, 562.0], [42.8, 562.0], [42.9, 568.0], [43.0, 568.0], [43.1, 568.0], [43.2, 574.0], [43.3, 574.0], [43.4, 578.0], [43.5, 578.0], [43.6, 578.0], [43.7, 581.0], [43.8, 581.0], [43.9, 584.0], [44.0, 584.0], [44.1, 586.0], [44.2, 586.0], [44.3, 586.0], [44.4, 586.0], [44.5, 586.0], [44.6, 588.0], [44.7, 588.0], [44.8, 588.0], [44.9, 588.0], [45.0, 588.0], [45.1, 590.0], [45.2, 590.0], [45.3, 591.0], [45.4, 591.0], [45.5, 595.0], [45.6, 595.0], [45.7, 595.0], [45.8, 595.0], [45.9, 595.0], [46.0, 595.0], [46.1, 595.0], [46.2, 595.0], [46.3, 595.0], [46.4, 595.0], [46.5, 597.0], [46.6, 597.0], [46.7, 598.0], [46.8, 598.0], [46.9, 598.0], [47.0, 599.0], [47.1, 599.0], [47.2, 599.0], [47.3, 599.0], [47.4, 600.0], [47.5, 600.0], [47.6, 600.0], [47.7, 601.0], [47.8, 601.0], [47.9, 601.0], [48.0, 601.0], [48.1, 601.0], [48.2, 601.0], [48.3, 601.0], [48.4, 602.0], [48.5, 602.0], [48.6, 603.0], [48.7, 603.0], [48.8, 603.0], [48.9, 603.0], [49.0, 603.0], [49.1, 607.0], [49.2, 607.0], [49.3, 607.0], [49.4, 607.0], [49.5, 607.0], [49.6, 608.0], [49.7, 608.0], [49.8, 608.0], [49.9, 608.0], [50.0, 608.0], [50.1, 608.0], [50.2, 608.0], [50.3, 608.0], [50.4, 608.0], [50.5, 609.0], [50.6, 609.0], [50.7, 609.0], [50.8, 609.0], [50.9, 609.0], [51.0, 610.0], [51.1, 610.0], [51.2, 611.0], [51.3, 611.0], [51.4, 611.0], [51.5, 612.0], [51.6, 612.0], [51.7, 613.0], [51.8, 613.0], [51.9, 613.0], [52.0, 613.0], [52.1, 613.0], [52.2, 615.0], [52.3, 615.0], [52.4, 615.0], [52.5, 615.0], [52.6, 615.0], [52.7, 616.0], [52.8, 616.0], [52.9, 617.0], [53.0, 617.0], [53.1, 617.0], [53.2, 617.0], [53.3, 617.0], [53.4, 620.0], [53.5, 620.0], [53.6, 623.0], [53.7, 623.0], [53.8, 624.0], [53.9, 624.0], [54.0, 624.0], [54.1, 624.0], [54.2, 624.0], [54.3, 632.0], [54.4, 632.0], [54.5, 632.0], [54.6, 634.0], [54.7, 634.0], [54.8, 641.0], [54.9, 641.0], [55.0, 649.0], [55.1, 649.0], [55.2, 649.0], [55.3, 657.0], [55.4, 657.0], [55.5, 662.0], [55.6, 662.0], [55.7, 667.0], [55.8, 667.0], [55.9, 667.0], [56.0, 671.0], [56.1, 671.0], [56.2, 674.0], [56.3, 674.0], [56.4, 677.0], [56.5, 677.0], [56.6, 677.0], [56.7, 678.0], [56.8, 678.0], [56.9, 680.0], [57.0, 680.0], [57.1, 680.0], [57.2, 680.0], [57.3, 680.0], [57.4, 680.0], [57.5, 680.0], [57.6, 683.0], [57.7, 683.0], [57.8, 683.0], [57.9, 686.0], [58.0, 686.0], [58.1, 686.0], [58.2, 686.0], [58.3, 694.0], [58.4, 694.0], [58.5, 694.0], [58.6, 695.0], [58.7, 695.0], [58.8, 696.0], [58.9, 696.0], [59.0, 696.0], [59.1, 697.0], [59.2, 697.0], [59.3, 698.0], [59.4, 698.0], [59.5, 698.0], [59.6, 698.0], [59.7, 698.0], [59.8, 699.0], [59.9, 699.0], [60.0, 700.0], [60.1, 700.0], [60.2, 701.0], [60.3, 701.0], [60.4, 701.0], [60.5, 704.0], [60.6, 704.0], [60.7, 704.0], [60.8, 704.0], [60.9, 704.0], [61.0, 711.0], [61.1, 711.0], [61.2, 713.0], [61.3, 713.0], [61.4, 714.0], [61.5, 714.0], [61.6, 714.0], [61.7, 717.0], [61.8, 717.0], [61.9, 719.0], [62.0, 719.0], [62.1, 719.0], [62.2, 719.0], [62.3, 719.0], [62.4, 741.0], [62.5, 741.0], [62.6, 755.0], [62.7, 755.0], [62.8, 766.0], [62.9, 766.0], [63.0, 766.0], [63.1, 766.0], [63.2, 766.0], [63.3, 771.0], [63.4, 771.0], [63.5, 771.0], [63.6, 775.0], [63.7, 775.0], [63.8, 775.0], [63.9, 775.0], [64.0, 775.0], [64.1, 775.0], [64.2, 775.0], [64.3, 777.0], [64.4, 777.0], [64.5, 783.0], [64.6, 783.0], [64.7, 800.0], [64.8, 800.0], [64.9, 800.0], [65.0, 810.0], [65.1, 810.0], [65.2, 815.0], [65.3, 815.0], [65.4, 815.0], [65.5, 869.0], [65.6, 869.0], [65.7, 890.0], [65.8, 890.0], [65.9, 897.0], [66.0, 897.0], [66.1, 897.0], [66.2, 900.0], [66.3, 900.0], [66.4, 972.0], [66.5, 972.0], [66.6, 993.0], [66.7, 993.0], [66.8, 993.0], [66.9, 1100.0], [67.0, 1100.0], [67.1, 1105.0], [67.2, 1105.0], [67.3, 1105.0], [67.4, 1105.0], [67.5, 1105.0], [67.6, 1185.0], [67.7, 1185.0], [67.8, 1282.0], [67.9, 1282.0], [68.0, 1282.0], [68.1, 1508.0], [68.2, 1508.0], [68.3, 1510.0], [68.4, 1510.0], [68.5, 1572.0], [68.6, 1572.0], [68.7, 1572.0], [68.8, 1607.0], [68.9, 1607.0], [69.0, 1677.0], [69.1, 1677.0], [69.2, 1789.0], [69.3, 1789.0], [69.4, 1789.0], [69.5, 1845.0], [69.6, 1845.0], [69.7, 1975.0], [69.8, 1975.0], [69.9, 1975.0], [70.0, 2108.0], [70.1, 2108.0], [70.2, 2296.0], [70.3, 2296.0], [70.4, 2348.0], [70.5, 2348.0], [70.6, 2348.0], [70.7, 4308.0], [70.8, 4308.0], [70.9, 9201.0], [71.0, 9201.0], [71.1, 9496.0], [71.2, 9496.0], [71.3, 9496.0], [71.4, 11400.0], [71.5, 11400.0], [71.6, 11508.0], [71.7, 11508.0], [71.8, 11508.0], [71.9, 11792.0], [72.0, 11792.0], [72.1, 12903.0], [72.2, 12903.0], [72.3, 15892.0], [72.4, 15892.0], [72.5, 15892.0], [72.6, 16919.0], [72.7, 16919.0], [72.8, 17775.0], [72.9, 17775.0], [73.0, 18085.0], [73.1, 18085.0], [73.2, 18085.0], [73.3, 18118.0], [73.4, 18118.0], [73.5, 18293.0], [73.6, 18293.0], [73.7, 18470.0], [73.8, 18470.0], [73.9, 18470.0], [74.0, 18586.0], [74.1, 18586.0], [74.2, 18872.0], [74.3, 18872.0], [74.4, 18872.0], [74.5, 18900.0], [74.6, 18900.0], [74.7, 18999.0], [74.8, 18999.0], [74.9, 19101.0], [75.0, 19101.0], [75.1, 19101.0], [75.2, 19128.0], [75.3, 19128.0], [75.4, 19176.0], [75.5, 19176.0], [75.6, 19197.0], [75.7, 19197.0], [75.8, 19197.0], [75.9, 19278.0], [76.0, 19278.0], [76.1, 19414.0], [76.2, 19414.0], [76.3, 19414.0], [76.4, 19685.0], [76.5, 19685.0], [76.6, 19702.0], [76.7, 19702.0], [76.8, 19985.0], [76.9, 19985.0], [77.0, 19985.0], [77.1, 19996.0], [77.2, 19996.0], [77.3, 20131.0], [77.4, 20131.0], [77.5, 20211.0], [77.6, 20211.0], [77.7, 20211.0], [77.8, 20213.0], [77.9, 20213.0], [78.0, 20382.0], [78.1, 20382.0], [78.2, 20423.0], [78.3, 20423.0], [78.4, 20423.0], [78.5, 20476.0], [78.6, 20476.0], [78.7, 20696.0], [78.8, 20696.0], [78.9, 20696.0], [79.0, 20699.0], [79.1, 20699.0], [79.2, 20789.0], [79.3, 20789.0], [79.4, 20894.0], [79.5, 20894.0], [79.6, 20894.0], [79.7, 20991.0], [79.8, 20991.0], [79.9, 21014.0], [80.0, 21014.0], [80.1, 21015.0], [80.2, 21015.0], [80.3, 21015.0], [80.4, 21021.0], [80.5, 21021.0], [80.6, 21067.0], [80.7, 21067.0], [80.8, 21067.0], [80.9, 21114.0], [81.0, 21114.0], [81.1, 21201.0], [81.2, 21201.0], [81.3, 21280.0], [81.4, 21280.0], [81.5, 21280.0], [81.6, 21312.0], [81.7, 21312.0], [81.8, 21315.0], [81.9, 21315.0], [82.0, 21319.0], [82.1, 21319.0], [82.2, 21319.0], [82.3, 21391.0], [82.4, 21391.0], [82.5, 21414.0], [82.6, 21414.0], [82.7, 21414.0], [82.8, 21427.0], [82.9, 21427.0], [83.0, 21520.0], [83.1, 21520.0], [83.2, 21556.0], [83.3, 21556.0], [83.4, 21556.0], [83.5, 21593.0], [83.6, 21593.0], [83.7, 21774.0], [83.8, 21774.0], [83.9, 21847.0], [84.0, 21847.0], [84.1, 21847.0], [84.2, 22099.0], [84.3, 22099.0], [84.4, 22368.0], [84.5, 22368.0], [84.6, 22388.0], [84.7, 22388.0], [84.8, 22388.0], [84.9, 22416.0], [85.0, 22416.0], [85.1, 22501.0], [85.2, 22501.0], [85.3, 22501.0], [85.4, 22547.0], [85.5, 22547.0], [85.6, 22769.0], [85.7, 22769.0], [85.8, 22782.0], [85.9, 22782.0], [86.0, 22782.0], [86.1, 22853.0], [86.2, 22853.0], [86.3, 23188.0], [86.4, 23188.0], [86.5, 23236.0], [86.6, 23236.0], [86.7, 23236.0], [86.8, 23479.0], [86.9, 23479.0], [87.0, 23496.0], [87.1, 23496.0], [87.2, 23496.0], [87.3, 23521.0], [87.4, 23521.0], [87.5, 23594.0], [87.6, 23594.0], [87.7, 23696.0], [87.8, 23696.0], [87.9, 23696.0], [88.0, 23887.0], [88.1, 23887.0], [88.2, 24192.0], [88.3, 24192.0], [88.4, 24267.0], [88.5, 24267.0], [88.6, 24267.0], [88.7, 24282.0], [88.8, 24282.0], [88.9, 24670.0], [89.0, 24670.0], [89.1, 24889.0], [89.2, 24889.0], [89.3, 24889.0], [89.4, 24893.0], [89.5, 24893.0], [89.6, 24985.0], [89.7, 24985.0], [89.8, 24985.0], [89.9, 25400.0], [90.0, 25400.0], [90.1, 25419.0], [90.2, 25419.0], [90.3, 25500.0], [90.4, 25500.0], [90.5, 25500.0], [90.6, 25522.0], [90.7, 25522.0], [90.8, 25574.0], [90.9, 25574.0], [91.0, 25620.0], [91.1, 25620.0], [91.2, 25620.0], [91.3, 25814.0], [91.4, 25814.0], [91.5, 26077.0], [91.6, 26077.0], [91.7, 26077.0], [91.8, 26100.0], [91.9, 26100.0], [92.0, 26261.0], [92.1, 26261.0], [92.2, 26589.0], [92.3, 26589.0], [92.4, 26589.0], [92.5, 26810.0], [92.6, 26810.0], [92.7, 27192.0], [92.8, 27192.0], [92.9, 27285.0], [93.0, 27285.0], [93.1, 27285.0], [93.2, 27490.0], [93.3, 27490.0], [93.4, 27806.0], [93.5, 27806.0], [93.6, 27806.0], [93.7, 28592.0], [93.8, 28592.0], [93.9, 28711.0], [94.0, 28711.0], [94.1, 29064.0], [94.2, 29064.0], [94.3, 29064.0], [94.4, 29901.0], [94.5, 29901.0], [94.6, 30690.0], [94.7, 30690.0], [94.8, 31101.0], [94.9, 31101.0], [95.0, 31101.0], [95.1, 31273.0], [95.2, 31273.0], [95.3, 31496.0], [95.4, 31496.0], [95.5, 31502.0], [95.6, 31502.0], [95.7, 31502.0], [95.8, 31665.0], [95.9, 31665.0], [96.0, 31920.0], [96.1, 31920.0], [96.2, 31920.0], [96.3, 31924.0], [96.4, 31924.0], [96.5, 32411.0], [96.6, 32411.0], [96.7, 32468.0], [96.8, 32468.0], [96.9, 32468.0], [97.0, 32880.0], [97.1, 32880.0], [97.2, 33072.0], [97.3, 33072.0], [97.4, 33295.0], [97.5, 33295.0], [97.6, 33295.0], [97.7, 33361.0], [97.8, 33361.0], [97.9, 33489.0], [98.0, 33489.0], [98.1, 33489.0], [98.2, 33682.0], [98.3, 33682.0], [98.4, 33704.0], [98.5, 33704.0], [98.6, 33846.0], [98.7, 33846.0], [98.8, 33846.0], [98.9, 34200.0], [99.0, 34200.0], [99.1, 34299.0], [99.2, 34299.0], [99.3, 34481.0], [99.4, 34481.0], [99.5, 34481.0], [99.6, 35302.0], [99.7, 35302.0], [99.8, 37889.0], [99.9, 37889.0], [100.0, 37889.0]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/staff/me", "isController": false}, {"data": [[0.0, 2412.0], [0.1, 2412.0], [0.2, 2412.0], [0.3, 2412.0], [0.4, 2422.0], [0.5, 2422.0], [0.6, 2422.0], [0.7, 2422.0], [0.8, 2441.0], [0.9, 2441.0], [1.0, 2441.0], [1.1, 2441.0], [1.2, 2442.0], [1.3, 2442.0], [1.4, 2442.0], [1.5, 2532.0], [1.6, 2532.0], [1.7, 2532.0], [1.8, 2532.0], [1.9, 2616.0], [2.0, 2616.0], [2.1, 2616.0], [2.2, 2616.0], [2.3, 2735.0], [2.4, 2735.0], [2.5, 2735.0], [2.6, 2834.0], [2.7, 2834.0], [2.8, 2834.0], [2.9, 2834.0], [3.0, 2906.0], [3.1, 2906.0], [3.2, 2906.0], [3.3, 2906.0], [3.4, 2931.0], [3.5, 2931.0], [3.6, 2931.0], [3.7, 2947.0], [3.8, 2947.0], [3.9, 2947.0], [4.0, 2947.0], [4.1, 2991.0], [4.2, 2991.0], [4.3, 2991.0], [4.4, 2991.0], [4.5, 3016.0], [4.6, 3016.0], [4.7, 3016.0], [4.8, 3291.0], [4.9, 3291.0], [5.0, 3291.0], [5.1, 3291.0], [5.2, 3304.0], [5.3, 3304.0], [5.4, 3304.0], [5.5, 3304.0], [5.6, 3345.0], [5.7, 3345.0], [5.8, 3345.0], [5.9, 3426.0], [6.0, 3426.0], [6.1, 3426.0], [6.2, 3426.0], [6.3, 3497.0], [6.4, 3497.0], [6.5, 3497.0], [6.6, 3497.0], [6.7, 3603.0], [6.8, 3603.0], [6.9, 3603.0], [7.0, 3999.0], [7.1, 3999.0], [7.2, 3999.0], [7.3, 3999.0], [7.4, 4096.0], [7.5, 4096.0], [7.6, 4096.0], [7.7, 4096.0], [7.8, 4109.0], [7.9, 4109.0], [8.0, 4109.0], [8.1, 4135.0], [8.2, 4135.0], [8.3, 4135.0], [8.4, 4135.0], [8.5, 4391.0], [8.6, 4391.0], [8.7, 4391.0], [8.8, 4391.0], [8.9, 4813.0], [9.0, 4813.0], [9.1, 4813.0], [9.2, 4878.0], [9.3, 4878.0], [9.4, 4878.0], [9.5, 4878.0], [9.6, 4893.0], [9.7, 4893.0], [9.8, 4893.0], [9.9, 4893.0], [10.0, 5003.0], [10.1, 5003.0], [10.2, 5003.0], [10.3, 5071.0], [10.4, 5071.0], [10.5, 5071.0], [10.6, 5071.0], [10.7, 5103.0], [10.8, 5103.0], [10.9, 5103.0], [11.0, 5103.0], [11.1, 5222.0], [11.2, 5222.0], [11.3, 5222.0], [11.4, 5230.0], [11.5, 5230.0], [11.6, 5230.0], [11.7, 5230.0], [11.8, 5349.0], [11.9, 5349.0], [12.0, 5349.0], [12.1, 5349.0], [12.2, 5588.0], [12.3, 5588.0], [12.4, 5588.0], [12.5, 5764.0], [12.6, 5764.0], [12.7, 5764.0], [12.8, 5764.0], [12.9, 5825.0], [13.0, 5825.0], [13.1, 5825.0], [13.2, 5825.0], [13.3, 5919.0], [13.4, 5919.0], [13.5, 5919.0], [13.6, 5919.0], [13.7, 6090.0], [13.8, 6090.0], [13.9, 6090.0], [14.0, 6179.0], [14.1, 6179.0], [14.2, 6179.0], [14.3, 6179.0], [14.4, 6196.0], [14.5, 6196.0], [14.6, 6196.0], [14.7, 6196.0], [14.8, 6288.0], [14.9, 6288.0], [15.0, 6288.0], [15.1, 6389.0], [15.2, 6389.0], [15.3, 6389.0], [15.4, 6389.0], [15.5, 6488.0], [15.6, 6488.0], [15.7, 6488.0], [15.8, 6488.0], [15.9, 6524.0], [16.0, 6524.0], [16.1, 6524.0], [16.2, 6710.0], [16.3, 6710.0], [16.4, 6710.0], [16.5, 6710.0], [16.6, 7013.0], [16.7, 7013.0], [16.8, 7013.0], [16.9, 7013.0], [17.0, 7100.0], [17.1, 7100.0], [17.2, 7100.0], [17.3, 7159.0], [17.4, 7159.0], [17.5, 7159.0], [17.6, 7159.0], [17.7, 7608.0], [17.8, 7608.0], [17.9, 7608.0], [18.0, 7608.0], [18.1, 7731.0], [18.2, 7731.0], [18.3, 7731.0], [18.4, 7760.0], [18.5, 7760.0], [18.6, 7760.0], [18.7, 7760.0], [18.8, 7856.0], [18.9, 7856.0], [19.0, 7856.0], [19.1, 7856.0], [19.2, 7930.0], [19.3, 7930.0], [19.4, 7930.0], [19.5, 7953.0], [19.6, 7953.0], [19.7, 7953.0], [19.8, 7953.0], [19.9, 7974.0], [20.0, 7974.0], [20.1, 7974.0], [20.2, 7974.0], [20.3, 8070.0], [20.4, 8070.0], [20.5, 8070.0], [20.6, 8421.0], [20.7, 8421.0], [20.8, 8421.0], [20.9, 8421.0], [21.0, 8421.0], [21.1, 8421.0], [21.2, 8421.0], [21.3, 8421.0], [21.4, 9007.0], [21.5, 9007.0], [21.6, 9007.0], [21.7, 9284.0], [21.8, 9284.0], [21.9, 9284.0], [22.0, 9284.0], [22.1, 9386.0], [22.2, 9386.0], [22.3, 9386.0], [22.4, 9386.0], [22.5, 9394.0], [22.6, 9394.0], [22.7, 9394.0], [22.8, 9605.0], [22.9, 9605.0], [23.0, 9605.0], [23.1, 9605.0], [23.2, 9866.0], [23.3, 9866.0], [23.4, 9866.0], [23.5, 9866.0], [23.6, 9984.0], [23.7, 9984.0], [23.8, 9984.0], [23.9, 10112.0], [24.0, 10112.0], [24.1, 10112.0], [24.2, 10112.0], [24.3, 10190.0], [24.4, 10190.0], [24.5, 10190.0], [24.6, 10190.0], [24.7, 10200.0], [24.8, 10200.0], [24.9, 10200.0], [25.0, 10275.0], [25.1, 10275.0], [25.2, 10275.0], [25.3, 10275.0], [25.4, 10296.0], [25.5, 10296.0], [25.6, 10296.0], [25.7, 10296.0], [25.8, 10496.0], [25.9, 10496.0], [26.0, 10496.0], [26.1, 10496.0], [26.2, 10963.0], [26.3, 10963.0], [26.4, 10963.0], [26.5, 11094.0], [26.6, 11094.0], [26.7, 11094.0], [26.8, 11094.0], [26.9, 11199.0], [27.0, 11199.0], [27.1, 11199.0], [27.2, 11199.0], [27.3, 11289.0], [27.4, 11289.0], [27.5, 11289.0], [27.6, 11299.0], [27.7, 11299.0], [27.8, 11299.0], [27.9, 11299.0], [28.0, 11598.0], [28.1, 11598.0], [28.2, 11598.0], [28.3, 11598.0], [28.4, 11864.0], [28.5, 11864.0], [28.6, 11864.0], [28.7, 12019.0], [28.8, 12019.0], [28.9, 12019.0], [29.0, 12019.0], [29.1, 12276.0], [29.2, 12276.0], [29.3, 12276.0], [29.4, 12276.0], [29.5, 12458.0], [29.6, 12458.0], [29.7, 12458.0], [29.8, 12467.0], [29.9, 12467.0], [30.0, 12467.0], [30.1, 12467.0], [30.2, 12779.0], [30.3, 12779.0], [30.4, 12779.0], [30.5, 12779.0], [30.6, 12885.0], [30.7, 12885.0], [30.8, 12885.0], [30.9, 12994.0], [31.0, 12994.0], [31.1, 12994.0], [31.2, 12994.0], [31.3, 13206.0], [31.4, 13206.0], [31.5, 13206.0], [31.6, 13206.0], [31.7, 14348.0], [31.8, 14348.0], [31.9, 14348.0], [32.0, 14683.0], [32.1, 14683.0], [32.2, 14683.0], [32.3, 14683.0], [32.4, 14701.0], [32.5, 14701.0], [32.6, 14701.0], [32.7, 14701.0], [32.8, 15011.0], [32.9, 15011.0], [33.0, 15011.0], [33.1, 15111.0], [33.2, 15111.0], [33.3, 15111.0], [33.4, 15111.0], [33.5, 15483.0], [33.6, 15483.0], [33.7, 15483.0], [33.8, 15483.0], [33.9, 15502.0], [34.0, 15502.0], [34.1, 15502.0], [34.2, 15553.0], [34.3, 15553.0], [34.4, 15553.0], [34.5, 15553.0], [34.6, 15904.0], [34.7, 15904.0], [34.8, 15904.0], [34.9, 15904.0], [35.0, 16156.0], [35.1, 16156.0], [35.2, 16156.0], [35.3, 16192.0], [35.4, 16192.0], [35.5, 16192.0], [35.6, 16192.0], [35.7, 16389.0], [35.8, 16389.0], [35.9, 16389.0], [36.0, 16389.0], [36.1, 16465.0], [36.2, 16465.0], [36.3, 16465.0], [36.4, 16562.0], [36.5, 16562.0], [36.6, 16562.0], [36.7, 16562.0], [36.8, 16630.0], [36.9, 16630.0], [37.0, 16630.0], [37.1, 16630.0], [37.2, 17173.0], [37.3, 17173.0], [37.4, 17173.0], [37.5, 17815.0], [37.6, 17815.0], [37.7, 17815.0], [37.8, 17815.0], [37.9, 17932.0], [38.0, 17932.0], [38.1, 17932.0], [38.2, 17932.0], [38.3, 18276.0], [38.4, 18276.0], [38.5, 18276.0], [38.6, 18276.0], [38.7, 19211.0], [38.8, 19211.0], [38.9, 19211.0], [39.0, 19459.0], [39.1, 19459.0], [39.2, 19459.0], [39.3, 19459.0], [39.4, 19578.0], [39.5, 19578.0], [39.6, 19578.0], [39.7, 19578.0], [39.8, 19794.0], [39.9, 19794.0], [40.0, 19794.0], [40.1, 20079.0], [40.2, 20079.0], [40.3, 20079.0], [40.4, 20079.0], [40.5, 20098.0], [40.6, 20098.0], [40.7, 20098.0], [40.8, 20098.0], [40.9, 20286.0], [41.0, 20286.0], [41.1, 20286.0], [41.2, 20314.0], [41.3, 20314.0], [41.4, 20314.0], [41.5, 20314.0], [41.6, 20504.0], [41.7, 20504.0], [41.8, 20504.0], [41.9, 20504.0], [42.0, 20581.0], [42.1, 20581.0], [42.2, 20581.0], [42.3, 21146.0], [42.4, 21146.0], [42.5, 21146.0], [42.6, 21146.0], [42.7, 21683.0], [42.8, 21683.0], [42.9, 21683.0], [43.0, 21683.0], [43.1, 22079.0], [43.2, 22079.0], [43.3, 22079.0], [43.4, 22176.0], [43.5, 22176.0], [43.6, 22176.0], [43.7, 22176.0], [43.8, 22638.0], [43.9, 22638.0], [44.0, 22638.0], [44.1, 22638.0], [44.2, 22809.0], [44.3, 22809.0], [44.4, 22809.0], [44.5, 23072.0], [44.6, 23072.0], [44.7, 23072.0], [44.8, 23072.0], [44.9, 23077.0], [45.0, 23077.0], [45.1, 23077.0], [45.2, 23077.0], [45.3, 23332.0], [45.4, 23332.0], [45.5, 23332.0], [45.6, 23382.0], [45.7, 23382.0], [45.8, 23382.0], [45.9, 23382.0], [46.0, 23795.0], [46.1, 23795.0], [46.2, 23795.0], [46.3, 23795.0], [46.4, 24251.0], [46.5, 24251.0], [46.6, 24251.0], [46.7, 24752.0], [46.8, 24752.0], [46.9, 24752.0], [47.0, 24752.0], [47.1, 25217.0], [47.2, 25217.0], [47.3, 25217.0], [47.4, 25217.0], [47.5, 25265.0], [47.6, 25265.0], [47.7, 25265.0], [47.8, 25557.0], [47.9, 25557.0], [48.0, 25557.0], [48.1, 25557.0], [48.2, 25586.0], [48.3, 25586.0], [48.4, 25586.0], [48.5, 25586.0], [48.6, 26562.0], [48.7, 26562.0], [48.8, 26562.0], [48.9, 26723.0], [49.0, 26723.0], [49.1, 26723.0], [49.2, 26723.0], [49.3, 27766.0], [49.4, 27766.0], [49.5, 27766.0], [49.6, 27766.0], [49.7, 27774.0], [49.8, 27774.0], [49.9, 27774.0], [50.0, 27856.0], [50.1, 27856.0], [50.2, 27856.0], [50.3, 27856.0], [50.4, 28636.0], [50.5, 28636.0], [50.6, 28636.0], [50.7, 28636.0], [50.8, 29365.0], [50.9, 29365.0], [51.0, 29365.0], [51.1, 29365.0], [51.2, 29838.0], [51.3, 29838.0], [51.4, 29838.0], [51.5, 29980.0], [51.6, 29980.0], [51.7, 29980.0], [51.8, 29980.0], [51.9, 30655.0], [52.0, 30655.0], [52.1, 30655.0], [52.2, 30655.0], [52.3, 31093.0], [52.4, 31093.0], [52.5, 31093.0], [52.6, 31378.0], [52.7, 31378.0], [52.8, 31378.0], [52.9, 31378.0], [53.0, 32112.0], [53.1, 32112.0], [53.2, 32112.0], [53.3, 32112.0], [53.4, 33375.0], [53.5, 33375.0], [53.6, 33375.0], [53.7, 34469.0], [53.8, 34469.0], [53.9, 34469.0], [54.0, 34469.0], [54.1, 43275.0], [54.2, 43275.0], [54.3, 43275.0], [54.4, 43275.0], [54.5, 47071.0], [54.6, 47071.0], [54.7, 47071.0], [54.8, 51506.0], [54.9, 51506.0], [55.0, 51506.0], [55.1, 51506.0], [55.2, 53088.0], [55.3, 53088.0], [55.4, 53088.0], [55.5, 53088.0], [55.6, 56647.0], [55.7, 56647.0], [55.8, 56647.0], [55.9, 57566.0], [56.0, 57566.0], [56.1, 57566.0], [56.2, 57566.0], [56.3, 61821.0], [56.4, 61821.0], [56.5, 61821.0], [56.6, 61821.0], [56.7, 61896.0], [56.8, 61896.0], [56.9, 61896.0], [57.0, 64470.0], [57.1, 64470.0], [57.2, 64470.0], [57.3, 64470.0], [57.4, 64698.0], [57.5, 64698.0], [57.6, 64698.0], [57.7, 64698.0], [57.8, 66219.0], [57.9, 66219.0], [58.0, 66219.0], [58.1, 66775.0], [58.2, 66775.0], [58.3, 66775.0], [58.4, 66775.0], [58.5, 66886.0], [58.6, 66886.0], [58.7, 66886.0], [58.8, 66886.0], [58.9, 68436.0], [59.0, 68436.0], [59.1, 68436.0], [59.2, 69556.0], [59.3, 69556.0], [59.4, 69556.0], [59.5, 69556.0], [59.6, 69685.0], [59.7, 69685.0], [59.8, 69685.0], [59.9, 69685.0], [60.0, 69862.0], [60.1, 69862.0], [60.2, 69862.0], [60.3, 72104.0], [60.4, 72104.0], [60.5, 72104.0], [60.6, 72104.0], [60.7, 75498.0], [60.8, 75498.0], [60.9, 75498.0], [61.0, 75498.0], [61.1, 76079.0], [61.2, 76079.0], [61.3, 76079.0], [61.4, 76683.0], [61.5, 76683.0], [61.6, 76683.0], [61.7, 76683.0], [61.8, 77693.0], [61.9, 77693.0], [62.0, 77693.0], [62.1, 77693.0], [62.2, 78590.0], [62.3, 78590.0], [62.4, 78590.0], [62.5, 80974.0], [62.6, 80974.0], [62.7, 80974.0], [62.8, 80974.0], [62.9, 81144.0], [63.0, 81144.0], [63.1, 81144.0], [63.2, 81144.0], [63.3, 81588.0], [63.4, 81588.0], [63.5, 81588.0], [63.6, 81588.0], [63.7, 82986.0], [63.8, 82986.0], [63.9, 82986.0], [64.0, 84244.0], [64.1, 84244.0], [64.2, 84244.0], [64.3, 84244.0], [64.4, 86576.0], [64.5, 86576.0], [64.6, 86576.0], [64.7, 86576.0], [64.8, 86718.0], [64.9, 86718.0], [65.0, 86718.0], [65.1, 86992.0], [65.2, 86992.0], [65.3, 86992.0], [65.4, 86992.0], [65.5, 87471.0], [65.6, 87471.0], [65.7, 87471.0], [65.8, 87471.0], [65.9, 88371.0], [66.0, 88371.0], [66.1, 88371.0], [66.2, 88909.0], [66.3, 88909.0], [66.4, 88909.0], [66.5, 88909.0], [66.6, 88997.0], [66.7, 88997.0], [66.8, 88997.0], [66.9, 88997.0], [67.0, 90045.0], [67.1, 90045.0], [67.2, 90045.0], [67.3, 92100.0], [67.4, 92100.0], [67.5, 92100.0], [67.6, 92100.0], [67.7, 93076.0], [67.8, 93076.0], [67.9, 93076.0], [68.0, 93076.0], [68.1, 93309.0], [68.2, 93309.0], [68.3, 93309.0], [68.4, 93387.0], [68.5, 93387.0], [68.6, 93387.0], [68.7, 93387.0], [68.8, 93504.0], [68.9, 93504.0], [69.0, 93504.0], [69.1, 93504.0], [69.2, 94163.0], [69.3, 94163.0], [69.4, 94163.0], [69.5, 94457.0], [69.6, 94457.0], [69.7, 94457.0], [69.8, 94457.0], [69.9, 96959.0], [70.0, 96959.0], [70.1, 96959.0], [70.2, 96959.0], [70.3, 97674.0], [70.4, 97674.0], [70.5, 97674.0], [70.6, 98255.0], [70.7, 98255.0], [70.8, 98255.0], [70.9, 98255.0], [71.0, 98265.0], [71.1, 98265.0], [71.2, 98265.0], [71.3, 98265.0], [71.4, 98750.0], [71.5, 98750.0], [71.6, 98750.0], [71.7, 99054.0], [71.8, 99054.0], [71.9, 99054.0], [72.0, 99054.0], [72.1, 99343.0], [72.2, 99343.0], [72.3, 99343.0], [72.4, 99343.0], [72.5, 99765.0], [72.6, 99765.0], [72.7, 99765.0], [72.8, 100074.0], [72.9, 100074.0], [73.0, 100074.0], [73.1, 100074.0], [73.2, 100466.0], [73.3, 100466.0], [73.4, 100466.0], [73.5, 100466.0], [73.6, 102866.0], [73.7, 102866.0], [73.8, 102866.0], [73.9, 104058.0], [74.0, 104058.0], [74.1, 104058.0], [74.2, 104058.0], [74.3, 104770.0], [74.4, 104770.0], [74.5, 104770.0], [74.6, 104770.0], [74.7, 105444.0], [74.8, 105444.0], [74.9, 105444.0], [75.0, 105444.0], [75.1, 105719.0], [75.2, 105719.0], [75.3, 105719.0], [75.4, 105861.0], [75.5, 105861.0], [75.6, 105861.0], [75.7, 105861.0], [75.8, 105965.0], [75.9, 105965.0], [76.0, 105965.0], [76.1, 105965.0], [76.2, 106431.0], [76.3, 106431.0], [76.4, 106431.0], [76.5, 106780.0], [76.6, 106780.0], [76.7, 106780.0], [76.8, 106780.0], [76.9, 107569.0], [77.0, 107569.0], [77.1, 107569.0], [77.2, 107569.0], [77.3, 109506.0], [77.4, 109506.0], [77.5, 109506.0], [77.6, 110190.0], [77.7, 110190.0], [77.8, 110190.0], [77.9, 110190.0], [78.0, 111191.0], [78.1, 111191.0], [78.2, 111191.0], [78.3, 111191.0], [78.4, 111564.0], [78.5, 111564.0], [78.6, 111564.0], [78.7, 112261.0], [78.8, 112261.0], [78.9, 112261.0], [79.0, 112261.0], [79.1, 114396.0], [79.2, 114396.0], [79.3, 114396.0], [79.4, 114396.0], [79.5, 114486.0], [79.6, 114486.0], [79.7, 114486.0], [79.8, 115141.0], [79.9, 115141.0], [80.0, 115141.0], [80.1, 115141.0], [80.2, 117698.0], [80.3, 117698.0], [80.4, 117698.0], [80.5, 117698.0], [80.6, 118061.0], [80.7, 118061.0], [80.8, 118061.0], [80.9, 118732.0], [81.0, 118732.0], [81.1, 118732.0], [81.2, 118732.0], [81.3, 118763.0], [81.4, 118763.0], [81.5, 118763.0], [81.6, 118763.0], [81.7, 119482.0], [81.8, 119482.0], [81.9, 119482.0], [82.0, 119957.0], [82.1, 119957.0], [82.2, 119957.0], [82.3, 119957.0], [82.4, 119988.0], [82.5, 119988.0], [82.6, 119988.0], [82.7, 119988.0], [82.8, 120195.0], [82.9, 120195.0], [83.0, 120195.0], [83.1, 121615.0], [83.2, 121615.0], [83.3, 121615.0], [83.4, 121615.0], [83.5, 121956.0], [83.6, 121956.0], [83.7, 121956.0], [83.8, 121956.0], [83.9, 122055.0], [84.0, 122055.0], [84.1, 122055.0], [84.2, 122160.0], [84.3, 122160.0], [84.4, 122160.0], [84.5, 122160.0], [84.6, 122571.0], [84.7, 122571.0], [84.8, 122571.0], [84.9, 122571.0], [85.0, 123082.0], [85.1, 123082.0], [85.2, 123082.0], [85.3, 123093.0], [85.4, 123093.0], [85.5, 123093.0], [85.6, 123093.0], [85.7, 123368.0], [85.8, 123368.0], [85.9, 123368.0], [86.0, 123368.0], [86.1, 123417.0], [86.2, 123417.0], [86.3, 123417.0], [86.4, 123668.0], [86.5, 123668.0], [86.6, 123668.0], [86.7, 123668.0], [86.8, 123752.0], [86.9, 123752.0], [87.0, 123752.0], [87.1, 123752.0], [87.2, 123862.0], [87.3, 123862.0], [87.4, 123862.0], [87.5, 123862.0], [87.6, 124197.0], [87.7, 124197.0], [87.8, 124197.0], [87.9, 124497.0], [88.0, 124497.0], [88.1, 124497.0], [88.2, 124497.0], [88.3, 124555.0], [88.4, 124555.0], [88.5, 124555.0], [88.6, 124555.0], [88.7, 125671.0], [88.8, 125671.0], [88.9, 125671.0], [89.0, 126181.0], [89.1, 126181.0], [89.2, 126181.0], [89.3, 126181.0], [89.4, 126766.0], [89.5, 126766.0], [89.6, 126766.0], [89.7, 126766.0], [89.8, 126852.0], [89.9, 126852.0], [90.0, 126852.0], [90.1, 127144.0], [90.2, 127144.0], [90.3, 127144.0], [90.4, 127144.0], [90.5, 127988.0], [90.6, 127988.0], [90.7, 127988.0], [90.8, 127988.0], [90.9, 127995.0], [91.0, 127995.0], [91.1, 127995.0], [91.2, 128629.0], [91.3, 128629.0], [91.4, 128629.0], [91.5, 128629.0], [91.6, 129192.0], [91.7, 129192.0], [91.8, 129192.0], [91.9, 129192.0], [92.0, 129513.0], [92.1, 129513.0], [92.2, 129513.0], [92.3, 130050.0], [92.4, 130050.0], [92.5, 130050.0], [92.6, 130050.0], [92.7, 130162.0], [92.8, 130162.0], [92.9, 130162.0], [93.0, 130162.0], [93.1, 130213.0], [93.2, 130213.0], [93.3, 130213.0], [93.4, 130273.0], [93.5, 130273.0], [93.6, 130273.0], [93.7, 130273.0], [93.8, 130991.0], [93.9, 130991.0], [94.0, 130991.0], [94.1, 130991.0], [94.2, 131175.0], [94.3, 131175.0], [94.4, 131175.0], [94.5, 132004.0], [94.6, 132004.0], [94.7, 132004.0], [94.8, 132004.0], [94.9, 132852.0], [95.0, 132852.0], [95.1, 132852.0], [95.2, 132852.0], [95.3, 133479.0], [95.4, 133479.0], [95.5, 133479.0], [95.6, 134185.0], [95.7, 134185.0], [95.8, 134185.0], [95.9, 134185.0], [96.0, 134426.0], [96.1, 134426.0], [96.2, 134426.0], [96.3, 134426.0], [96.4, 134501.0], [96.5, 134501.0], [96.6, 134501.0], [96.7, 138074.0], [96.8, 138074.0], [96.9, 138074.0], [97.0, 138074.0], [97.1, 138969.0], [97.2, 138969.0], [97.3, 138969.0], [97.4, 138969.0], [97.5, 138992.0], [97.6, 138992.0], [97.7, 138992.0], [97.8, 139317.0], [97.9, 139317.0], [98.0, 139317.0], [98.1, 139317.0], [98.2, 140175.0], [98.3, 140175.0], [98.4, 140175.0], [98.5, 140175.0], [98.6, 141143.0], [98.7, 141143.0], [98.8, 141143.0], [98.9, 147326.0], [99.0, 147326.0], [99.1, 147326.0], [99.2, 147326.0], [99.3, 151275.0], [99.4, 151275.0], [99.5, 151275.0], [99.6, 151275.0], [99.7, 151783.0], [99.8, 151783.0], [99.9, 151783.0], [100.0, 151783.0]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/staff/login", "isController": false}, {"data": [[0.0, 522.0], [0.1, 522.0], [0.2, 522.0], [0.3, 522.0], [0.4, 522.0], [0.5, 522.0], [0.6, 570.0], [0.7, 570.0], [0.8, 570.0], [0.9, 570.0], [1.0, 570.0], [1.1, 644.0], [1.2, 644.0], [1.3, 644.0], [1.4, 644.0], [1.5, 644.0], [1.6, 665.0], [1.7, 665.0], [1.8, 665.0], [1.9, 665.0], [2.0, 665.0], [2.1, 736.0], [2.2, 736.0], [2.3, 736.0], [2.4, 736.0], [2.5, 736.0], [2.6, 748.0], [2.7, 748.0], [2.8, 748.0], [2.9, 748.0], [3.0, 748.0], [3.1, 818.0], [3.2, 818.0], [3.3, 818.0], [3.4, 818.0], [3.5, 818.0], [3.6, 846.0], [3.7, 846.0], [3.8, 846.0], [3.9, 846.0], [4.0, 846.0], [4.1, 857.0], [4.2, 857.0], [4.3, 857.0], [4.4, 857.0], [4.5, 857.0], [4.6, 873.0], [4.7, 873.0], [4.8, 873.0], [4.9, 873.0], [5.0, 873.0], [5.1, 892.0], [5.2, 892.0], [5.3, 892.0], [5.4, 892.0], [5.5, 892.0], [5.6, 915.0], [5.7, 915.0], [5.8, 915.0], [5.9, 915.0], [6.0, 915.0], [6.1, 935.0], [6.2, 935.0], [6.3, 935.0], [6.4, 935.0], [6.5, 935.0], [6.6, 949.0], [6.7, 949.0], [6.8, 949.0], [6.9, 949.0], [7.0, 949.0], [7.1, 1028.0], [7.2, 1028.0], [7.3, 1028.0], [7.4, 1028.0], [7.5, 1028.0], [7.6, 1029.0], [7.7, 1029.0], [7.8, 1029.0], [7.9, 1029.0], [8.0, 1029.0], [8.1, 1113.0], [8.2, 1113.0], [8.3, 1113.0], [8.4, 1113.0], [8.5, 1113.0], [8.6, 1136.0], [8.7, 1136.0], [8.8, 1136.0], [8.9, 1136.0], [9.0, 1136.0], [9.1, 1215.0], [9.2, 1215.0], [9.3, 1215.0], [9.4, 1215.0], [9.5, 1215.0], [9.6, 1318.0], [9.7, 1318.0], [9.8, 1318.0], [9.9, 1318.0], [10.0, 1318.0], [10.1, 1318.0], [10.2, 1335.0], [10.3, 1335.0], [10.4, 1335.0], [10.5, 1335.0], [10.6, 1335.0], [10.7, 1338.0], [10.8, 1338.0], [10.9, 1338.0], [11.0, 1338.0], [11.1, 1338.0], [11.2, 1426.0], [11.3, 1426.0], [11.4, 1426.0], [11.5, 1426.0], [11.6, 1426.0], [11.7, 1481.0], [11.8, 1481.0], [11.9, 1481.0], [12.0, 1481.0], [12.1, 1481.0], [12.2, 1510.0], [12.3, 1510.0], [12.4, 1510.0], [12.5, 1510.0], [12.6, 1510.0], [12.7, 1522.0], [12.8, 1522.0], [12.9, 1522.0], [13.0, 1522.0], [13.1, 1522.0], [13.2, 1532.0], [13.3, 1532.0], [13.4, 1532.0], [13.5, 1532.0], [13.6, 1532.0], [13.7, 1533.0], [13.8, 1533.0], [13.9, 1533.0], [14.0, 1533.0], [14.1, 1533.0], [14.2, 1537.0], [14.3, 1537.0], [14.4, 1537.0], [14.5, 1537.0], [14.6, 1537.0], [14.7, 1539.0], [14.8, 1539.0], [14.9, 1539.0], [15.0, 1539.0], [15.1, 1539.0], [15.2, 1547.0], [15.3, 1547.0], [15.4, 1547.0], [15.5, 1547.0], [15.6, 1547.0], [15.7, 1607.0], [15.8, 1607.0], [15.9, 1607.0], [16.0, 1607.0], [16.1, 1607.0], [16.2, 1627.0], [16.3, 1627.0], [16.4, 1627.0], [16.5, 1627.0], [16.6, 1627.0], [16.7, 1629.0], [16.8, 1629.0], [16.9, 1629.0], [17.0, 1629.0], [17.1, 1629.0], [17.2, 1635.0], [17.3, 1635.0], [17.4, 1635.0], [17.5, 1635.0], [17.6, 1635.0], [17.7, 1646.0], [17.8, 1646.0], [17.9, 1646.0], [18.0, 1646.0], [18.1, 1646.0], [18.2, 1697.0], [18.3, 1697.0], [18.4, 1697.0], [18.5, 1697.0], [18.6, 1697.0], [18.7, 1709.0], [18.8, 1709.0], [18.9, 1709.0], [19.0, 1709.0], [19.1, 1709.0], [19.2, 1721.0], [19.3, 1721.0], [19.4, 1721.0], [19.5, 1721.0], [19.6, 1721.0], [19.7, 1738.0], [19.8, 1738.0], [19.9, 1738.0], [20.0, 1738.0], [20.1, 1738.0], [20.2, 1738.0], [20.3, 1739.0], [20.4, 1739.0], [20.5, 1739.0], [20.6, 1739.0], [20.7, 1739.0], [20.8, 1741.0], [20.9, 1741.0], [21.0, 1741.0], [21.1, 1741.0], [21.2, 1741.0], [21.3, 1792.0], [21.4, 1792.0], [21.5, 1792.0], [21.6, 1792.0], [21.7, 1792.0], [21.8, 1812.0], [21.9, 1812.0], [22.0, 1812.0], [22.1, 1812.0], [22.2, 1812.0], [22.3, 1814.0], [22.4, 1814.0], [22.5, 1814.0], [22.6, 1814.0], [22.7, 1814.0], [22.8, 1814.0], [22.9, 1814.0], [23.0, 1814.0], [23.1, 1814.0], [23.2, 1814.0], [23.3, 1815.0], [23.4, 1815.0], [23.5, 1815.0], [23.6, 1815.0], [23.7, 1815.0], [23.8, 1820.0], [23.9, 1820.0], [24.0, 1820.0], [24.1, 1820.0], [24.2, 1820.0], [24.3, 1821.0], [24.4, 1821.0], [24.5, 1821.0], [24.6, 1821.0], [24.7, 1821.0], [24.8, 1824.0], [24.9, 1824.0], [25.0, 1824.0], [25.1, 1824.0], [25.2, 1824.0], [25.3, 1837.0], [25.4, 1837.0], [25.5, 1837.0], [25.6, 1837.0], [25.7, 1837.0], [25.8, 1841.0], [25.9, 1841.0], [26.0, 1841.0], [26.1, 1841.0], [26.2, 1841.0], [26.3, 1862.0], [26.4, 1862.0], [26.5, 1862.0], [26.6, 1862.0], [26.7, 1862.0], [26.8, 1883.0], [26.9, 1883.0], [27.0, 1883.0], [27.1, 1883.0], [27.2, 1883.0], [27.3, 1894.0], [27.4, 1894.0], [27.5, 1894.0], [27.6, 1894.0], [27.7, 1894.0], [27.8, 1898.0], [27.9, 1898.0], [28.0, 1898.0], [28.1, 1898.0], [28.2, 1898.0], [28.3, 1900.0], [28.4, 1900.0], [28.5, 1900.0], [28.6, 1900.0], [28.7, 1900.0], [28.8, 1909.0], [28.9, 1909.0], [29.0, 1909.0], [29.1, 1909.0], [29.2, 1909.0], [29.3, 1917.0], [29.4, 1917.0], [29.5, 1917.0], [29.6, 1917.0], [29.7, 1917.0], [29.8, 1920.0], [29.9, 1920.0], [30.0, 1920.0], [30.1, 1920.0], [30.2, 1920.0], [30.3, 1920.0], [30.4, 1931.0], [30.5, 1931.0], [30.6, 1931.0], [30.7, 1931.0], [30.8, 1931.0], [30.9, 1941.0], [31.0, 1941.0], [31.1, 1941.0], [31.2, 1941.0], [31.3, 1941.0], [31.4, 1941.0], [31.5, 1941.0], [31.6, 1941.0], [31.7, 1941.0], [31.8, 1941.0], [31.9, 1956.0], [32.0, 1956.0], [32.1, 1956.0], [32.2, 1956.0], [32.3, 1956.0], [32.4, 1972.0], [32.5, 1972.0], [32.6, 1972.0], [32.7, 1972.0], [32.8, 1972.0], [32.9, 1984.0], [33.0, 1984.0], [33.1, 1984.0], [33.2, 1984.0], [33.3, 1984.0], [33.4, 1998.0], [33.5, 1998.0], [33.6, 1998.0], [33.7, 1998.0], [33.8, 1998.0], [33.9, 2005.0], [34.0, 2005.0], [34.1, 2005.0], [34.2, 2005.0], [34.3, 2005.0], [34.4, 2006.0], [34.5, 2006.0], [34.6, 2006.0], [34.7, 2006.0], [34.8, 2006.0], [34.9, 2018.0], [35.0, 2018.0], [35.1, 2018.0], [35.2, 2018.0], [35.3, 2018.0], [35.4, 2037.0], [35.5, 2037.0], [35.6, 2037.0], [35.7, 2037.0], [35.8, 2037.0], [35.9, 2055.0], [36.0, 2055.0], [36.1, 2055.0], [36.2, 2055.0], [36.3, 2055.0], [36.4, 2085.0], [36.5, 2085.0], [36.6, 2085.0], [36.7, 2085.0], [36.8, 2085.0], [36.9, 2085.0], [37.0, 2085.0], [37.1, 2085.0], [37.2, 2085.0], [37.3, 2085.0], [37.4, 2090.0], [37.5, 2090.0], [37.6, 2090.0], [37.7, 2090.0], [37.8, 2090.0], [37.9, 2101.0], [38.0, 2101.0], [38.1, 2101.0], [38.2, 2101.0], [38.3, 2101.0], [38.4, 2108.0], [38.5, 2108.0], [38.6, 2108.0], [38.7, 2108.0], [38.8, 2108.0], [38.9, 2114.0], [39.0, 2114.0], [39.1, 2114.0], [39.2, 2114.0], [39.3, 2114.0], [39.4, 2130.0], [39.5, 2130.0], [39.6, 2130.0], [39.7, 2130.0], [39.8, 2130.0], [39.9, 2133.0], [40.0, 2133.0], [40.1, 2133.0], [40.2, 2133.0], [40.3, 2133.0], [40.4, 2133.0], [40.5, 2139.0], [40.6, 2139.0], [40.7, 2139.0], [40.8, 2139.0], [40.9, 2139.0], [41.0, 2149.0], [41.1, 2149.0], [41.2, 2149.0], [41.3, 2149.0], [41.4, 2149.0], [41.5, 2175.0], [41.6, 2175.0], [41.7, 2175.0], [41.8, 2175.0], [41.9, 2175.0], [42.0, 2209.0], [42.1, 2209.0], [42.2, 2209.0], [42.3, 2209.0], [42.4, 2209.0], [42.5, 2222.0], [42.6, 2222.0], [42.7, 2222.0], [42.8, 2222.0], [42.9, 2222.0], [43.0, 2228.0], [43.1, 2228.0], [43.2, 2228.0], [43.3, 2228.0], [43.4, 2228.0], [43.5, 2232.0], [43.6, 2232.0], [43.7, 2232.0], [43.8, 2232.0], [43.9, 2232.0], [44.0, 2251.0], [44.1, 2251.0], [44.2, 2251.0], [44.3, 2251.0], [44.4, 2251.0], [44.5, 2270.0], [44.6, 2270.0], [44.7, 2270.0], [44.8, 2270.0], [44.9, 2270.0], [45.0, 2326.0], [45.1, 2326.0], [45.2, 2326.0], [45.3, 2326.0], [45.4, 2326.0], [45.5, 2331.0], [45.6, 2331.0], [45.7, 2331.0], [45.8, 2331.0], [45.9, 2331.0], [46.0, 2350.0], [46.1, 2350.0], [46.2, 2350.0], [46.3, 2350.0], [46.4, 2350.0], [46.5, 2356.0], [46.6, 2356.0], [46.7, 2356.0], [46.8, 2356.0], [46.9, 2356.0], [47.0, 2377.0], [47.1, 2377.0], [47.2, 2377.0], [47.3, 2377.0], [47.4, 2377.0], [47.5, 2411.0], [47.6, 2411.0], [47.7, 2411.0], [47.8, 2411.0], [47.9, 2411.0], [48.0, 2413.0], [48.1, 2413.0], [48.2, 2413.0], [48.3, 2413.0], [48.4, 2413.0], [48.5, 2437.0], [48.6, 2437.0], [48.7, 2437.0], [48.8, 2437.0], [48.9, 2437.0], [49.0, 2481.0], [49.1, 2481.0], [49.2, 2481.0], [49.3, 2481.0], [49.4, 2481.0], [49.5, 2487.0], [49.6, 2487.0], [49.7, 2487.0], [49.8, 2487.0], [49.9, 2487.0], [50.0, 2487.0], [50.1, 2496.0], [50.2, 2496.0], [50.3, 2496.0], [50.4, 2496.0], [50.5, 2496.0], [50.6, 2515.0], [50.7, 2515.0], [50.8, 2515.0], [50.9, 2515.0], [51.0, 2515.0], [51.1, 2519.0], [51.2, 2519.0], [51.3, 2519.0], [51.4, 2519.0], [51.5, 2519.0], [51.6, 2521.0], [51.7, 2521.0], [51.8, 2521.0], [51.9, 2521.0], [52.0, 2521.0], [52.1, 2524.0], [52.2, 2524.0], [52.3, 2524.0], [52.4, 2524.0], [52.5, 2524.0], [52.6, 2525.0], [52.7, 2525.0], [52.8, 2525.0], [52.9, 2525.0], [53.0, 2525.0], [53.1, 2615.0], [53.2, 2615.0], [53.3, 2615.0], [53.4, 2615.0], [53.5, 2615.0], [53.6, 2627.0], [53.7, 2627.0], [53.8, 2627.0], [53.9, 2627.0], [54.0, 2627.0], [54.1, 2637.0], [54.2, 2637.0], [54.3, 2637.0], [54.4, 2637.0], [54.5, 2637.0], [54.6, 2711.0], [54.7, 2711.0], [54.8, 2711.0], [54.9, 2711.0], [55.0, 2711.0], [55.1, 2811.0], [55.2, 2811.0], [55.3, 2811.0], [55.4, 2811.0], [55.5, 2811.0], [55.6, 2815.0], [55.7, 2815.0], [55.8, 2815.0], [55.9, 2815.0], [56.0, 2815.0], [56.1, 2835.0], [56.2, 2835.0], [56.3, 2835.0], [56.4, 2835.0], [56.5, 2835.0], [56.6, 2936.0], [56.7, 2936.0], [56.8, 2936.0], [56.9, 2936.0], [57.0, 2936.0], [57.1, 3034.0], [57.2, 3034.0], [57.3, 3034.0], [57.4, 3034.0], [57.5, 3034.0], [57.6, 3105.0], [57.7, 3105.0], [57.8, 3105.0], [57.9, 3105.0], [58.0, 3105.0], [58.1, 3117.0], [58.2, 3117.0], [58.3, 3117.0], [58.4, 3117.0], [58.5, 3117.0], [58.6, 3279.0], [58.7, 3279.0], [58.8, 3279.0], [58.9, 3279.0], [59.0, 3279.0], [59.1, 3314.0], [59.2, 3314.0], [59.3, 3314.0], [59.4, 3314.0], [59.5, 3314.0], [59.6, 3389.0], [59.7, 3389.0], [59.8, 3389.0], [59.9, 3389.0], [60.0, 3389.0], [60.1, 3389.0], [60.2, 3546.0], [60.3, 3546.0], [60.4, 3546.0], [60.5, 3546.0], [60.6, 3546.0], [60.7, 3608.0], [60.8, 3608.0], [60.9, 3608.0], [61.0, 3608.0], [61.1, 3608.0], [61.2, 3713.0], [61.3, 3713.0], [61.4, 3713.0], [61.5, 3713.0], [61.6, 3713.0], [61.7, 3723.0], [61.8, 3723.0], [61.9, 3723.0], [62.0, 3723.0], [62.1, 3723.0], [62.2, 3884.0], [62.3, 3884.0], [62.4, 3884.0], [62.5, 3884.0], [62.6, 3884.0], [62.7, 3932.0], [62.8, 3932.0], [62.9, 3932.0], [63.0, 3932.0], [63.1, 3932.0], [63.2, 4093.0], [63.3, 4093.0], [63.4, 4093.0], [63.5, 4093.0], [63.6, 4093.0], [63.7, 4151.0], [63.8, 4151.0], [63.9, 4151.0], [64.0, 4151.0], [64.1, 4151.0], [64.2, 4404.0], [64.3, 4404.0], [64.4, 4404.0], [64.5, 4404.0], [64.6, 4404.0], [64.7, 4656.0], [64.8, 4656.0], [64.9, 4656.0], [65.0, 4656.0], [65.1, 4656.0], [65.2, 4709.0], [65.3, 4709.0], [65.4, 4709.0], [65.5, 4709.0], [65.6, 4709.0], [65.7, 4800.0], [65.8, 4800.0], [65.9, 4800.0], [66.0, 4800.0], [66.1, 4800.0], [66.2, 4902.0], [66.3, 4902.0], [66.4, 4902.0], [66.5, 4902.0], [66.6, 4902.0], [66.7, 5091.0], [66.8, 5091.0], [66.9, 5091.0], [67.0, 5091.0], [67.1, 5091.0], [67.2, 5228.0], [67.3, 5228.0], [67.4, 5228.0], [67.5, 5228.0], [67.6, 5228.0], [67.7, 10611.0], [67.8, 10611.0], [67.9, 10611.0], [68.0, 10611.0], [68.1, 10611.0], [68.2, 17648.0], [68.3, 17648.0], [68.4, 17648.0], [68.5, 17648.0], [68.6, 17648.0], [68.7, 18000.0], [68.8, 18000.0], [68.9, 18000.0], [69.0, 18000.0], [69.1, 18000.0], [69.2, 19810.0], [69.3, 19810.0], [69.4, 19810.0], [69.5, 19810.0], [69.6, 19810.0], [69.7, 20101.0], [69.8, 20101.0], [69.9, 20101.0], [70.0, 20101.0], [70.1, 20101.0], [70.2, 20101.0], [70.3, 20818.0], [70.4, 20818.0], [70.5, 20818.0], [70.6, 20818.0], [70.7, 20818.0], [70.8, 21135.0], [70.9, 21135.0], [71.0, 21135.0], [71.1, 21135.0], [71.2, 21135.0], [71.3, 21237.0], [71.4, 21237.0], [71.5, 21237.0], [71.6, 21237.0], [71.7, 21237.0], [71.8, 21244.0], [71.9, 21244.0], [72.0, 21244.0], [72.1, 21244.0], [72.2, 21244.0], [72.3, 21583.0], [72.4, 21583.0], [72.5, 21583.0], [72.6, 21583.0], [72.7, 21583.0], [72.8, 22108.0], [72.9, 22108.0], [73.0, 22108.0], [73.1, 22108.0], [73.2, 22108.0], [73.3, 22124.0], [73.4, 22124.0], [73.5, 22124.0], [73.6, 22124.0], [73.7, 22124.0], [73.8, 22482.0], [73.9, 22482.0], [74.0, 22482.0], [74.1, 22482.0], [74.2, 22482.0], [74.3, 23019.0], [74.4, 23019.0], [74.5, 23019.0], [74.6, 23019.0], [74.7, 23019.0], [74.8, 23087.0], [74.9, 23087.0], [75.0, 23087.0], [75.1, 23087.0], [75.2, 23087.0], [75.3, 23409.0], [75.4, 23409.0], [75.5, 23409.0], [75.6, 23409.0], [75.7, 23409.0], [75.8, 23417.0], [75.9, 23417.0], [76.0, 23417.0], [76.1, 23417.0], [76.2, 23417.0], [76.3, 23556.0], [76.4, 23556.0], [76.5, 23556.0], [76.6, 23556.0], [76.7, 23556.0], [76.8, 23587.0], [76.9, 23587.0], [77.0, 23587.0], [77.1, 23587.0], [77.2, 23587.0], [77.3, 23959.0], [77.4, 23959.0], [77.5, 23959.0], [77.6, 23959.0], [77.7, 23959.0], [77.8, 24067.0], [77.9, 24067.0], [78.0, 24067.0], [78.1, 24067.0], [78.2, 24067.0], [78.3, 24284.0], [78.4, 24284.0], [78.5, 24284.0], [78.6, 24284.0], [78.7, 24284.0], [78.8, 24417.0], [78.9, 24417.0], [79.0, 24417.0], [79.1, 24417.0], [79.2, 24417.0], [79.3, 24710.0], [79.4, 24710.0], [79.5, 24710.0], [79.6, 24710.0], [79.7, 24710.0], [79.8, 25018.0], [79.9, 25018.0], [80.0, 25018.0], [80.1, 25018.0], [80.2, 25018.0], [80.3, 25018.0], [80.4, 25233.0], [80.5, 25233.0], [80.6, 25233.0], [80.7, 25233.0], [80.8, 25233.0], [80.9, 25288.0], [81.0, 25288.0], [81.1, 25288.0], [81.2, 25288.0], [81.3, 25288.0], [81.4, 25302.0], [81.5, 25302.0], [81.6, 25302.0], [81.7, 25302.0], [81.8, 25302.0], [81.9, 26003.0], [82.0, 26003.0], [82.1, 26003.0], [82.2, 26003.0], [82.3, 26003.0], [82.4, 26510.0], [82.5, 26510.0], [82.6, 26510.0], [82.7, 26510.0], [82.8, 26510.0], [82.9, 26571.0], [83.0, 26571.0], [83.1, 26571.0], [83.2, 26571.0], [83.3, 26571.0], [83.4, 27176.0], [83.5, 27176.0], [83.6, 27176.0], [83.7, 27176.0], [83.8, 27176.0], [83.9, 27420.0], [84.0, 27420.0], [84.1, 27420.0], [84.2, 27420.0], [84.3, 27420.0], [84.4, 27592.0], [84.5, 27592.0], [84.6, 27592.0], [84.7, 27592.0], [84.8, 27592.0], [84.9, 27694.0], [85.0, 27694.0], [85.1, 27694.0], [85.2, 27694.0], [85.3, 27694.0], [85.4, 27897.0], [85.5, 27897.0], [85.6, 27897.0], [85.7, 27897.0], [85.8, 27897.0], [85.9, 28069.0], [86.0, 28069.0], [86.1, 28069.0], [86.2, 28069.0], [86.3, 28069.0], [86.4, 28689.0], [86.5, 28689.0], [86.6, 28689.0], [86.7, 28689.0], [86.8, 28689.0], [86.9, 29004.0], [87.0, 29004.0], [87.1, 29004.0], [87.2, 29004.0], [87.3, 29004.0], [87.4, 29307.0], [87.5, 29307.0], [87.6, 29307.0], [87.7, 29307.0], [87.8, 29307.0], [87.9, 30511.0], [88.0, 30511.0], [88.1, 30511.0], [88.2, 30511.0], [88.3, 30511.0], [88.4, 30791.0], [88.5, 30791.0], [88.6, 30791.0], [88.7, 30791.0], [88.8, 30791.0], [88.9, 30895.0], [89.0, 30895.0], [89.1, 30895.0], [89.2, 30895.0], [89.3, 30895.0], [89.4, 30989.0], [89.5, 30989.0], [89.6, 30989.0], [89.7, 30989.0], [89.8, 30989.0], [89.9, 31528.0], [90.0, 31528.0], [90.1, 31528.0], [90.2, 31528.0], [90.3, 31528.0], [90.4, 31528.0], [90.5, 32527.0], [90.6, 32527.0], [90.7, 32527.0], [90.8, 32527.0], [90.9, 32527.0], [91.0, 33616.0], [91.1, 33616.0], [91.2, 33616.0], [91.3, 33616.0], [91.4, 33616.0], [91.5, 33994.0], [91.6, 33994.0], [91.7, 33994.0], [91.8, 33994.0], [91.9, 33994.0], [92.0, 33998.0], [92.1, 33998.0], [92.2, 33998.0], [92.3, 33998.0], [92.4, 33998.0], [92.5, 34390.0], [92.6, 34390.0], [92.7, 34390.0], [92.8, 34390.0], [92.9, 34390.0], [93.0, 35299.0], [93.1, 35299.0], [93.2, 35299.0], [93.3, 35299.0], [93.4, 35299.0], [93.5, 35589.0], [93.6, 35589.0], [93.7, 35589.0], [93.8, 35589.0], [93.9, 35589.0], [94.0, 35912.0], [94.1, 35912.0], [94.2, 35912.0], [94.3, 35912.0], [94.4, 35912.0], [94.5, 35939.0], [94.6, 35939.0], [94.7, 35939.0], [94.8, 35939.0], [94.9, 35939.0], [95.0, 36020.0], [95.1, 36020.0], [95.2, 36020.0], [95.3, 36020.0], [95.4, 36020.0], [95.5, 36283.0], [95.6, 36283.0], [95.7, 36283.0], [95.8, 36283.0], [95.9, 36283.0], [96.0, 36403.0], [96.1, 36403.0], [96.2, 36403.0], [96.3, 36403.0], [96.4, 36403.0], [96.5, 36522.0], [96.6, 36522.0], [96.7, 36522.0], [96.8, 36522.0], [96.9, 36522.0], [97.0, 36580.0], [97.1, 36580.0], [97.2, 36580.0], [97.3, 36580.0], [97.4, 36580.0], [97.5, 36712.0], [97.6, 36712.0], [97.7, 36712.0], [97.8, 36712.0], [97.9, 36712.0], [98.0, 37077.0], [98.1, 37077.0], [98.2, 37077.0], [98.3, 37077.0], [98.4, 37077.0], [98.5, 37519.0], [98.6, 37519.0], [98.7, 37519.0], [98.8, 37519.0], [98.9, 37519.0], [99.0, 41306.0], [99.1, 41306.0], [99.2, 41306.0], [99.3, 41306.0], [99.4, 41306.0], [99.5, 42705.0], [99.6, 42705.0], [99.7, 42705.0], [99.8, 42705.0], [99.9, 42705.0], [100.0, 42705.0]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/user-posts?sort_by=created_at&sort_order=descending&page=1&limit=10", "isController": false}, {"data": [[0.0, 73.0], [0.1, 73.0], [0.2, 73.0], [0.3, 73.0], [0.4, 73.0], [0.5, 73.0], [0.6, 73.0], [0.7, 73.0], [0.8, 73.0], [0.9, 73.0], [1.0, 73.0], [1.1, 74.0], [1.2, 74.0], [1.3, 74.0], [1.4, 74.0], [1.5, 74.0], [1.6, 74.0], [1.7, 80.0], [1.8, 80.0], [1.9, 80.0], [2.0, 80.0], [2.1, 80.0], [2.2, 82.0], [2.3, 82.0], [2.4, 82.0], [2.5, 82.0], [2.6, 82.0], [2.7, 82.0], [2.8, 89.0], [2.9, 89.0], [3.0, 89.0], [3.1, 89.0], [3.2, 89.0], [3.3, 89.0], [3.4, 89.0], [3.5, 89.0], [3.6, 89.0], [3.7, 89.0], [3.8, 91.0], [3.9, 91.0], [4.0, 91.0], [4.1, 91.0], [4.2, 91.0], [4.3, 91.0], [4.4, 101.0], [4.5, 101.0], [4.6, 101.0], [4.7, 101.0], [4.8, 101.0], [4.9, 105.0], [5.0, 105.0], [5.1, 105.0], [5.2, 105.0], [5.3, 105.0], [5.4, 105.0], [5.5, 108.0], [5.6, 108.0], [5.7, 108.0], [5.8, 108.0], [5.9, 108.0], [6.0, 109.0], [6.1, 109.0], [6.2, 109.0], [6.3, 109.0], [6.4, 109.0], [6.5, 112.0], [6.6, 112.0], [6.7, 112.0], [6.8, 112.0], [6.9, 112.0], [7.0, 112.0], [7.1, 112.0], [7.2, 112.0], [7.3, 112.0], [7.4, 112.0], [7.5, 112.0], [7.6, 112.0], [7.7, 112.0], [7.8, 112.0], [7.9, 112.0], [8.0, 112.0], [8.1, 112.0], [8.2, 113.0], [8.3, 113.0], [8.4, 113.0], [8.5, 113.0], [8.6, 113.0], [8.7, 116.0], [8.8, 116.0], [8.9, 116.0], [9.0, 116.0], [9.1, 116.0], [9.2, 119.0], [9.3, 119.0], [9.4, 119.0], [9.5, 119.0], [9.6, 119.0], [9.7, 119.0], [9.8, 125.0], [9.9, 125.0], [10.0, 125.0], [10.1, 125.0], [10.2, 125.0], [10.3, 125.0], [10.4, 125.0], [10.5, 125.0], [10.6, 125.0], [10.7, 125.0], [10.8, 125.0], [10.9, 133.0], [11.0, 133.0], [11.1, 133.0], [11.2, 133.0], [11.3, 133.0], [11.4, 154.0], [11.5, 154.0], [11.6, 154.0], [11.7, 154.0], [11.8, 154.0], [11.9, 160.0], [12.0, 160.0], [12.1, 160.0], [12.2, 160.0], [12.3, 160.0], [12.4, 160.0], [12.5, 170.0], [12.6, 170.0], [12.7, 170.0], [12.8, 170.0], [12.9, 170.0], [13.0, 192.0], [13.1, 192.0], [13.2, 192.0], [13.3, 192.0], [13.4, 192.0], [13.5, 192.0], [13.6, 212.0], [13.7, 212.0], [13.8, 212.0], [13.9, 212.0], [14.0, 212.0], [14.1, 216.0], [14.2, 216.0], [14.3, 216.0], [14.4, 216.0], [14.5, 216.0], [14.6, 276.0], [14.7, 276.0], [14.8, 276.0], [14.9, 276.0], [15.0, 276.0], [15.1, 276.0], [15.2, 290.0], [15.3, 290.0], [15.4, 290.0], [15.5, 290.0], [15.6, 290.0], [15.7, 296.0], [15.8, 296.0], [15.9, 296.0], [16.0, 296.0], [16.1, 296.0], [16.2, 296.0], [16.3, 300.0], [16.4, 300.0], [16.5, 300.0], [16.6, 300.0], [16.7, 300.0], [16.8, 318.0], [16.9, 318.0], [17.0, 318.0], [17.1, 318.0], [17.2, 318.0], [17.3, 339.0], [17.4, 339.0], [17.5, 339.0], [17.6, 339.0], [17.7, 339.0], [17.8, 339.0], [17.9, 357.0], [18.0, 357.0], [18.1, 357.0], [18.2, 357.0], [18.3, 357.0], [18.4, 362.0], [18.5, 362.0], [18.6, 362.0], [18.7, 362.0], [18.8, 362.0], [18.9, 362.0], [19.0, 369.0], [19.1, 369.0], [19.2, 369.0], [19.3, 369.0], [19.4, 369.0], [19.5, 381.0], [19.6, 381.0], [19.7, 381.0], [19.8, 381.0], [19.9, 381.0], [20.0, 382.0], [20.1, 382.0], [20.2, 382.0], [20.3, 382.0], [20.4, 382.0], [20.5, 382.0], [20.6, 382.0], [20.7, 382.0], [20.8, 382.0], [20.9, 382.0], [21.0, 382.0], [21.1, 386.0], [21.2, 386.0], [21.3, 386.0], [21.4, 386.0], [21.5, 386.0], [21.6, 386.0], [21.7, 387.0], [21.8, 387.0], [21.9, 387.0], [22.0, 387.0], [22.1, 387.0], [22.2, 394.0], [22.3, 394.0], [22.4, 394.0], [22.5, 394.0], [22.6, 394.0], [22.7, 394.0], [22.8, 395.0], [22.9, 395.0], [23.0, 395.0], [23.1, 395.0], [23.2, 395.0], [23.3, 398.0], [23.4, 398.0], [23.5, 398.0], [23.6, 398.0], [23.7, 398.0], [23.8, 402.0], [23.9, 402.0], [24.0, 402.0], [24.1, 402.0], [24.2, 402.0], [24.3, 402.0], [24.4, 406.0], [24.5, 406.0], [24.6, 406.0], [24.7, 406.0], [24.8, 406.0], [24.9, 413.0], [25.0, 413.0], [25.1, 413.0], [25.2, 413.0], [25.3, 413.0], [25.4, 413.0], [25.5, 443.0], [25.6, 443.0], [25.7, 443.0], [25.8, 443.0], [25.9, 443.0], [26.0, 451.0], [26.1, 451.0], [26.2, 451.0], [26.3, 451.0], [26.4, 451.0], [26.5, 460.0], [26.6, 460.0], [26.7, 460.0], [26.8, 460.0], [26.9, 460.0], [27.0, 460.0], [27.1, 460.0], [27.2, 460.0], [27.3, 460.0], [27.4, 460.0], [27.5, 460.0], [27.6, 462.0], [27.7, 462.0], [27.8, 462.0], [27.9, 462.0], [28.0, 462.0], [28.1, 462.0], [28.2, 463.0], [28.3, 463.0], [28.4, 463.0], [28.5, 463.0], [28.6, 463.0], [28.7, 464.0], [28.8, 464.0], [28.9, 464.0], [29.0, 464.0], [29.1, 464.0], [29.2, 469.0], [29.3, 469.0], [29.4, 469.0], [29.5, 469.0], [29.6, 469.0], [29.7, 469.0], [29.8, 472.0], [29.9, 472.0], [30.0, 472.0], [30.1, 472.0], [30.2, 472.0], [30.3, 474.0], [30.4, 474.0], [30.5, 474.0], [30.6, 474.0], [30.7, 474.0], [30.8, 474.0], [30.9, 479.0], [31.0, 479.0], [31.1, 479.0], [31.2, 479.0], [31.3, 479.0], [31.4, 479.0], [31.5, 479.0], [31.6, 479.0], [31.7, 479.0], [31.8, 479.0], [31.9, 480.0], [32.0, 480.0], [32.1, 480.0], [32.2, 480.0], [32.3, 480.0], [32.4, 480.0], [32.5, 481.0], [32.6, 481.0], [32.7, 481.0], [32.8, 481.0], [32.9, 481.0], [33.0, 487.0], [33.1, 487.0], [33.2, 487.0], [33.3, 487.0], [33.4, 487.0], [33.5, 487.0], [33.6, 491.0], [33.7, 491.0], [33.8, 491.0], [33.9, 491.0], [34.0, 491.0], [34.1, 494.0], [34.2, 494.0], [34.3, 494.0], [34.4, 494.0], [34.5, 494.0], [34.6, 495.0], [34.7, 495.0], [34.8, 495.0], [34.9, 495.0], [35.0, 495.0], [35.1, 495.0], [35.2, 497.0], [35.3, 497.0], [35.4, 497.0], [35.5, 497.0], [35.6, 497.0], [35.7, 498.0], [35.8, 498.0], [35.9, 498.0], [36.0, 498.0], [36.1, 498.0], [36.2, 498.0], [36.3, 499.0], [36.4, 499.0], [36.5, 499.0], [36.6, 499.0], [36.7, 499.0], [36.8, 502.0], [36.9, 502.0], [37.0, 502.0], [37.1, 502.0], [37.2, 502.0], [37.3, 503.0], [37.4, 503.0], [37.5, 503.0], [37.6, 503.0], [37.7, 503.0], [37.8, 503.0], [37.9, 504.0], [38.0, 504.0], [38.1, 504.0], [38.2, 504.0], [38.3, 504.0], [38.4, 512.0], [38.5, 512.0], [38.6, 512.0], [38.7, 512.0], [38.8, 512.0], [38.9, 512.0], [39.0, 512.0], [39.1, 512.0], [39.2, 512.0], [39.3, 512.0], [39.4, 512.0], [39.5, 525.0], [39.6, 525.0], [39.7, 525.0], [39.8, 525.0], [39.9, 525.0], [40.0, 527.0], [40.1, 527.0], [40.2, 527.0], [40.3, 527.0], [40.4, 527.0], [40.5, 527.0], [40.6, 539.0], [40.7, 539.0], [40.8, 539.0], [40.9, 539.0], [41.0, 539.0], [41.1, 540.0], [41.2, 540.0], [41.3, 540.0], [41.4, 540.0], [41.5, 540.0], [41.6, 540.0], [41.7, 549.0], [41.8, 549.0], [41.9, 549.0], [42.0, 549.0], [42.1, 549.0], [42.2, 550.0], [42.3, 550.0], [42.4, 550.0], [42.5, 550.0], [42.6, 550.0], [42.7, 550.0], [42.8, 551.0], [42.9, 551.0], [43.0, 551.0], [43.1, 551.0], [43.2, 551.0], [43.3, 565.0], [43.4, 565.0], [43.5, 565.0], [43.6, 565.0], [43.7, 565.0], [43.8, 567.0], [43.9, 567.0], [44.0, 567.0], [44.1, 567.0], [44.2, 567.0], [44.3, 567.0], [44.4, 568.0], [44.5, 568.0], [44.6, 568.0], [44.7, 568.0], [44.8, 568.0], [44.9, 571.0], [45.0, 571.0], [45.1, 571.0], [45.2, 571.0], [45.3, 571.0], [45.4, 571.0], [45.5, 574.0], [45.6, 574.0], [45.7, 574.0], [45.8, 574.0], [45.9, 574.0], [46.0, 574.0], [46.1, 574.0], [46.2, 574.0], [46.3, 574.0], [46.4, 574.0], [46.5, 576.0], [46.6, 576.0], [46.7, 576.0], [46.8, 576.0], [46.9, 576.0], [47.0, 576.0], [47.1, 578.0], [47.2, 578.0], [47.3, 578.0], [47.4, 578.0], [47.5, 578.0], [47.6, 580.0], [47.7, 580.0], [47.8, 580.0], [47.9, 580.0], [48.0, 580.0], [48.1, 580.0], [48.2, 581.0], [48.3, 581.0], [48.4, 581.0], [48.5, 581.0], [48.6, 581.0], [48.7, 581.0], [48.8, 581.0], [48.9, 581.0], [49.0, 581.0], [49.1, 581.0], [49.2, 582.0], [49.3, 582.0], [49.4, 582.0], [49.5, 582.0], [49.6, 582.0], [49.7, 582.0], [49.8, 582.0], [49.9, 582.0], [50.0, 582.0], [50.1, 582.0], [50.2, 582.0], [50.3, 587.0], [50.4, 587.0], [50.5, 587.0], [50.6, 587.0], [50.7, 587.0], [50.8, 587.0], [50.9, 588.0], [51.0, 588.0], [51.1, 588.0], [51.2, 588.0], [51.3, 588.0], [51.4, 588.0], [51.5, 588.0], [51.6, 588.0], [51.7, 588.0], [51.8, 588.0], [51.9, 592.0], [52.0, 592.0], [52.1, 592.0], [52.2, 592.0], [52.3, 592.0], [52.4, 592.0], [52.5, 592.0], [52.6, 592.0], [52.7, 592.0], [52.8, 592.0], [52.9, 592.0], [53.0, 594.0], [53.1, 594.0], [53.2, 594.0], [53.3, 594.0], [53.4, 594.0], [53.5, 594.0], [53.6, 595.0], [53.7, 595.0], [53.8, 595.0], [53.9, 595.0], [54.0, 595.0], [54.1, 597.0], [54.2, 597.0], [54.3, 597.0], [54.4, 597.0], [54.5, 597.0], [54.6, 598.0], [54.7, 598.0], [54.8, 598.0], [54.9, 598.0], [55.0, 598.0], [55.1, 598.0], [55.2, 605.0], [55.3, 605.0], [55.4, 605.0], [55.5, 605.0], [55.6, 605.0], [55.7, 605.0], [55.8, 605.0], [55.9, 605.0], [56.0, 605.0], [56.1, 605.0], [56.2, 605.0], [56.3, 610.0], [56.4, 610.0], [56.5, 610.0], [56.6, 610.0], [56.7, 610.0], [56.8, 610.0], [56.9, 610.0], [57.0, 610.0], [57.1, 610.0], [57.2, 610.0], [57.3, 617.0], [57.4, 617.0], [57.5, 617.0], [57.6, 617.0], [57.7, 617.0], [57.8, 617.0], [57.9, 645.0], [58.0, 645.0], [58.1, 645.0], [58.2, 645.0], [58.3, 645.0], [58.4, 650.0], [58.5, 650.0], [58.6, 650.0], [58.7, 650.0], [58.8, 650.0], [58.9, 650.0], [59.0, 651.0], [59.1, 651.0], [59.2, 651.0], [59.3, 651.0], [59.4, 651.0], [59.5, 667.0], [59.6, 667.0], [59.7, 667.0], [59.8, 667.0], [59.9, 667.0], [60.0, 670.0], [60.1, 670.0], [60.2, 670.0], [60.3, 670.0], [60.4, 670.0], [60.5, 670.0], [60.6, 671.0], [60.7, 671.0], [60.8, 671.0], [60.9, 671.0], [61.0, 671.0], [61.1, 677.0], [61.2, 677.0], [61.3, 677.0], [61.4, 677.0], [61.5, 677.0], [61.6, 677.0], [61.7, 679.0], [61.8, 679.0], [61.9, 679.0], [62.0, 679.0], [62.1, 679.0], [62.2, 680.0], [62.3, 680.0], [62.4, 680.0], [62.5, 680.0], [62.6, 680.0], [62.7, 680.0], [62.8, 687.0], [62.9, 687.0], [63.0, 687.0], [63.1, 687.0], [63.2, 687.0], [63.3, 688.0], [63.4, 688.0], [63.5, 688.0], [63.6, 688.0], [63.7, 688.0], [63.8, 690.0], [63.9, 690.0], [64.0, 690.0], [64.1, 690.0], [64.2, 690.0], [64.3, 690.0], [64.4, 701.0], [64.5, 701.0], [64.6, 701.0], [64.7, 701.0], [64.8, 701.0], [64.9, 709.0], [65.0, 709.0], [65.1, 709.0], [65.2, 709.0], [65.3, 709.0], [65.4, 709.0], [65.5, 711.0], [65.6, 711.0], [65.7, 711.0], [65.8, 711.0], [65.9, 711.0], [66.0, 718.0], [66.1, 718.0], [66.2, 718.0], [66.3, 718.0], [66.4, 718.0], [66.5, 775.0], [66.6, 775.0], [66.7, 775.0], [66.8, 775.0], [66.9, 775.0], [67.0, 775.0], [67.1, 779.0], [67.2, 779.0], [67.3, 779.0], [67.4, 779.0], [67.5, 779.0], [67.6, 779.0], [67.7, 779.0], [67.8, 779.0], [67.9, 779.0], [68.0, 779.0], [68.1, 779.0], [68.2, 786.0], [68.3, 786.0], [68.4, 786.0], [68.5, 786.0], [68.6, 786.0], [68.7, 797.0], [68.8, 797.0], [68.9, 797.0], [69.0, 797.0], [69.1, 797.0], [69.2, 799.0], [69.3, 799.0], [69.4, 799.0], [69.5, 799.0], [69.6, 799.0], [69.7, 799.0], [69.8, 804.0], [69.9, 804.0], [70.0, 804.0], [70.1, 804.0], [70.2, 804.0], [70.3, 806.0], [70.4, 806.0], [70.5, 806.0], [70.6, 806.0], [70.7, 806.0], [70.8, 806.0], [70.9, 863.0], [71.0, 863.0], [71.1, 863.0], [71.2, 863.0], [71.3, 863.0], [71.4, 874.0], [71.5, 874.0], [71.6, 874.0], [71.7, 874.0], [71.8, 874.0], [71.9, 1029.0], [72.0, 1029.0], [72.1, 1029.0], [72.2, 1029.0], [72.3, 1029.0], [72.4, 1029.0], [72.5, 1177.0], [72.6, 1177.0], [72.7, 1177.0], [72.8, 1177.0], [72.9, 1177.0], [73.0, 1396.0], [73.1, 1396.0], [73.2, 1396.0], [73.3, 1396.0], [73.4, 1396.0], [73.5, 1396.0], [73.6, 1780.0], [73.7, 1780.0], [73.8, 1780.0], [73.9, 1780.0], [74.0, 1780.0], [74.1, 1901.0], [74.2, 1901.0], [74.3, 1901.0], [74.4, 1901.0], [74.5, 1901.0], [74.6, 9802.0], [74.7, 9802.0], [74.8, 9802.0], [74.9, 9802.0], [75.0, 9802.0], [75.1, 9802.0], [75.2, 16512.0], [75.3, 16512.0], [75.4, 16512.0], [75.5, 16512.0], [75.6, 16512.0], [75.7, 16706.0], [75.8, 16706.0], [75.9, 16706.0], [76.0, 16706.0], [76.1, 16706.0], [76.2, 16706.0], [76.3, 17992.0], [76.4, 17992.0], [76.5, 17992.0], [76.6, 17992.0], [76.7, 17992.0], [76.8, 18258.0], [76.9, 18258.0], [77.0, 18258.0], [77.1, 18258.0], [77.2, 18258.0], [77.3, 18644.0], [77.4, 18644.0], [77.5, 18644.0], [77.6, 18644.0], [77.7, 18644.0], [77.8, 18644.0], [77.9, 18647.0], [78.0, 18647.0], [78.1, 18647.0], [78.2, 18647.0], [78.3, 18647.0], [78.4, 18759.0], [78.5, 18759.0], [78.6, 18759.0], [78.7, 18759.0], [78.8, 18759.0], [78.9, 18759.0], [79.0, 19075.0], [79.1, 19075.0], [79.2, 19075.0], [79.3, 19075.0], [79.4, 19075.0], [79.5, 19720.0], [79.6, 19720.0], [79.7, 19720.0], [79.8, 19720.0], [79.9, 19720.0], [80.0, 19720.0], [80.1, 19784.0], [80.2, 19784.0], [80.3, 19784.0], [80.4, 19784.0], [80.5, 19784.0], [80.6, 19786.0], [80.7, 19786.0], [80.8, 19786.0], [80.9, 19786.0], [81.0, 19786.0], [81.1, 20618.0], [81.2, 20618.0], [81.3, 20618.0], [81.4, 20618.0], [81.5, 20618.0], [81.6, 20618.0], [81.7, 20673.0], [81.8, 20673.0], [81.9, 20673.0], [82.0, 20673.0], [82.1, 20673.0], [82.2, 21104.0], [82.3, 21104.0], [82.4, 21104.0], [82.5, 21104.0], [82.6, 21104.0], [82.7, 21104.0], [82.8, 21372.0], [82.9, 21372.0], [83.0, 21372.0], [83.1, 21372.0], [83.2, 21372.0], [83.3, 21432.0], [83.4, 21432.0], [83.5, 21432.0], [83.6, 21432.0], [83.7, 21432.0], [83.8, 21755.0], [83.9, 21755.0], [84.0, 21755.0], [84.1, 21755.0], [84.2, 21755.0], [84.3, 21755.0], [84.4, 22072.0], [84.5, 22072.0], [84.6, 22072.0], [84.7, 22072.0], [84.8, 22072.0], [84.9, 22679.0], [85.0, 22679.0], [85.1, 22679.0], [85.2, 22679.0], [85.3, 22679.0], [85.4, 22679.0], [85.5, 22772.0], [85.6, 22772.0], [85.7, 22772.0], [85.8, 22772.0], [85.9, 22772.0], [86.0, 22793.0], [86.1, 22793.0], [86.2, 22793.0], [86.3, 22793.0], [86.4, 22793.0], [86.5, 22996.0], [86.6, 22996.0], [86.7, 22996.0], [86.8, 22996.0], [86.9, 22996.0], [87.0, 22996.0], [87.1, 23233.0], [87.2, 23233.0], [87.3, 23233.0], [87.4, 23233.0], [87.5, 23233.0], [87.6, 23985.0], [87.7, 23985.0], [87.8, 23985.0], [87.9, 23985.0], [88.0, 23985.0], [88.1, 23985.0], [88.2, 24783.0], [88.3, 24783.0], [88.4, 24783.0], [88.5, 24783.0], [88.6, 24783.0], [88.7, 24803.0], [88.8, 24803.0], [88.9, 24803.0], [89.0, 24803.0], [89.1, 24803.0], [89.2, 24836.0], [89.3, 24836.0], [89.4, 24836.0], [89.5, 24836.0], [89.6, 24836.0], [89.7, 24836.0], [89.8, 25965.0], [89.9, 25965.0], [90.0, 25965.0], [90.1, 25965.0], [90.2, 25965.0], [90.3, 25970.0], [90.4, 25970.0], [90.5, 25970.0], [90.6, 25970.0], [90.7, 25970.0], [90.8, 25970.0], [90.9, 26264.0], [91.0, 26264.0], [91.1, 26264.0], [91.2, 26264.0], [91.3, 26264.0], [91.4, 26394.0], [91.5, 26394.0], [91.6, 26394.0], [91.7, 26394.0], [91.8, 26394.0], [91.9, 26489.0], [92.0, 26489.0], [92.1, 26489.0], [92.2, 26489.0], [92.3, 26489.0], [92.4, 26489.0], [92.5, 26869.0], [92.6, 26869.0], [92.7, 26869.0], [92.8, 26869.0], [92.9, 26869.0], [93.0, 27868.0], [93.1, 27868.0], [93.2, 27868.0], [93.3, 27868.0], [93.4, 27868.0], [93.5, 27868.0], [93.6, 28113.0], [93.7, 28113.0], [93.8, 28113.0], [93.9, 28113.0], [94.0, 28113.0], [94.1, 29109.0], [94.2, 29109.0], [94.3, 29109.0], [94.4, 29109.0], [94.5, 29109.0], [94.6, 29782.0], [94.7, 29782.0], [94.8, 29782.0], [94.9, 29782.0], [95.0, 29782.0], [95.1, 29782.0], [95.2, 30264.0], [95.3, 30264.0], [95.4, 30264.0], [95.5, 30264.0], [95.6, 30264.0], [95.7, 31640.0], [95.8, 31640.0], [95.9, 31640.0], [96.0, 31640.0], [96.1, 31640.0], [96.2, 31640.0], [96.3, 31686.0], [96.4, 31686.0], [96.5, 31686.0], [96.6, 31686.0], [96.7, 31686.0], [96.8, 32791.0], [96.9, 32791.0], [97.0, 32791.0], [97.1, 32791.0], [97.2, 32791.0], [97.3, 32965.0], [97.4, 32965.0], [97.5, 32965.0], [97.6, 32965.0], [97.7, 32965.0], [97.8, 32965.0], [97.9, 33175.0], [98.0, 33175.0], [98.1, 33175.0], [98.2, 33175.0], [98.3, 33175.0], [98.4, 34087.0], [98.5, 34087.0], [98.6, 34087.0], [98.7, 34087.0], [98.8, 34087.0], [98.9, 34087.0], [99.0, 36277.0], [99.1, 36277.0], [99.2, 36277.0], [99.3, 36277.0], [99.4, 36277.0], [99.5, 37102.0], [99.6, 37102.0], [99.7, 37102.0], [99.8, 37102.0], [99.9, 37102.0], [100.0, 37102.0]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/categories?type=user_post", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 64.0, "series": [{"data": [[0.0, 23.0], [100.0, 21.0], [33700.0, 1.0], [33300.0, 1.0], [35300.0, 1.0], [200.0, 7.0], [300.0, 35.0], [400.0, 64.0], [500.0, 50.0], [600.0, 53.0], [700.0, 20.0], [800.0, 6.0], [900.0, 3.0], [1100.0, 4.0], [1200.0, 1.0], [1500.0, 3.0], [1600.0, 2.0], [1700.0, 1.0], [1800.0, 1.0], [1900.0, 1.0], [2100.0, 1.0], [2300.0, 1.0], [2200.0, 1.0], [4300.0, 1.0], [9200.0, 1.0], [9400.0, 1.0], [11400.0, 1.0], [11500.0, 1.0], [11700.0, 1.0], [12900.0, 1.0], [15800.0, 1.0], [16900.0, 1.0], [18100.0, 1.0], [18000.0, 1.0], [18400.0, 1.0], [18200.0, 1.0], [17700.0, 1.0], [19200.0, 1.0], [19400.0, 1.0], [18900.0, 2.0], [18500.0, 1.0], [18800.0, 1.0], [19100.0, 4.0], [19700.0, 1.0], [20400.0, 2.0], [20300.0, 1.0], [19900.0, 2.0], [20200.0, 2.0], [20100.0, 1.0], [19600.0, 1.0], [21300.0, 4.0], [20900.0, 1.0], [20800.0, 1.0], [21500.0, 3.0], [21400.0, 2.0], [20700.0, 1.0], [21000.0, 4.0], [21100.0, 1.0], [20600.0, 2.0], [21200.0, 2.0], [22000.0, 1.0], [22300.0, 2.0], [21700.0, 1.0], [22500.0, 2.0], [21800.0, 1.0], [22400.0, 1.0], [23500.0, 2.0], [22700.0, 2.0], [23400.0, 2.0], [23100.0, 1.0], [22800.0, 1.0], [23200.0, 1.0], [24100.0, 1.0], [24200.0, 2.0], [23600.0, 1.0], [23800.0, 1.0], [24800.0, 2.0], [25500.0, 3.0], [25400.0, 2.0], [24900.0, 1.0], [24600.0, 1.0], [26200.0, 1.0], [26000.0, 1.0], [25600.0, 1.0], [25800.0, 1.0], [26500.0, 1.0], [26100.0, 1.0], [27400.0, 1.0], [26800.0, 1.0], [27200.0, 1.0], [27100.0, 1.0], [28500.0, 1.0], [27800.0, 1.0], [28700.0, 1.0], [29000.0, 1.0], [30600.0, 1.0], [29900.0, 1.0], [31400.0, 1.0], [31200.0, 1.0], [31500.0, 1.0], [31600.0, 1.0], [31100.0, 1.0], [31900.0, 2.0], [32400.0, 2.0], [33200.0, 1.0], [33800.0, 1.0], [34200.0, 2.0], [33400.0, 1.0], [34400.0, 1.0], [33600.0, 1.0], [32800.0, 1.0], [33000.0, 1.0], [37800.0, 1.0]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/staff/me", "isController": false}, {"data": [[132000.0, 1.0], [151200.0, 1.0], [134500.0, 1.0], [139300.0, 1.0], [147300.0, 1.0], [66700.0, 1.0], [81100.0, 1.0], [88300.0, 1.0], [86700.0, 1.0], [98700.0, 1.0], [105900.0, 1.0], [107500.0, 1.0], [106700.0, 1.0], [111500.0, 1.0], [118700.0, 2.0], [121900.0, 1.0], [126700.0, 1.0], [129100.0, 1.0], [33300.0, 1.0], [141100.0, 1.0], [69800.0, 1.0], [75400.0, 1.0], [84200.0, 1.0], [87400.0, 1.0], [93000.0, 1.0], [105800.0, 1.0], [112200.0, 1.0], [119400.0, 1.0], [123400.0, 1.0], [2400.0, 4.0], [2500.0, 1.0], [2600.0, 1.0], [2700.0, 1.0], [2800.0, 1.0], [2900.0, 4.0], [3000.0, 1.0], [3300.0, 2.0], [3200.0, 1.0], [3400.0, 2.0], [3600.0, 1.0], [3900.0, 1.0], [4000.0, 1.0], [4300.0, 1.0], [4100.0, 2.0], [72100.0, 1.0], [4800.0, 3.0], [5000.0, 2.0], [5100.0, 1.0], [80900.0, 1.0], [78500.0, 1.0], [5300.0, 1.0], [5200.0, 2.0], [86500.0, 1.0], [5500.0, 1.0], [88900.0, 2.0], [5700.0, 1.0], [5800.0, 1.0], [92100.0, 1.0], [96900.0, 1.0], [5900.0, 1.0], [6000.0, 1.0], [6100.0, 2.0], [99300.0, 1.0], [6300.0, 1.0], [6200.0, 1.0], [6400.0, 1.0], [6500.0, 1.0], [105700.0, 1.0], [6700.0, 1.0], [7000.0, 1.0], [7100.0, 2.0], [7600.0, 1.0], [120100.0, 1.0], [122500.0, 1.0], [7800.0, 1.0], [7700.0, 2.0], [7900.0, 3.0], [123300.0, 1.0], [124100.0, 1.0], [8000.0, 1.0], [8400.0, 2.0], [9200.0, 1.0], [9000.0, 1.0], [9300.0, 2.0], [9600.0, 1.0], [10200.0, 3.0], [10100.0, 2.0], [9900.0, 1.0], [9800.0, 1.0], [10400.0, 1.0], [10900.0, 1.0], [11100.0, 1.0], [11000.0, 1.0], [11200.0, 2.0], [11500.0, 1.0], [12200.0, 1.0], [12000.0, 1.0], [11800.0, 1.0], [12400.0, 2.0], [12700.0, 1.0], [13200.0, 1.0], [12800.0, 1.0], [12900.0, 1.0], [14300.0, 1.0], [14700.0, 1.0], [14600.0, 1.0], [15100.0, 1.0], [15000.0, 1.0], [15500.0, 2.0], [15400.0, 1.0], [16100.0, 2.0], [16300.0, 1.0], [15900.0, 1.0], [16600.0, 1.0], [16400.0, 1.0], [18200.0, 1.0], [17800.0, 1.0], [19400.0, 1.0], [19200.0, 1.0], [20000.0, 2.0], [20200.0, 1.0], [21600.0, 1.0], [22000.0, 1.0], [22600.0, 1.0], [22800.0, 1.0], [23000.0, 2.0], [24200.0, 1.0], [25200.0, 2.0], [27800.0, 1.0], [28600.0, 1.0], [29800.0, 1.0], [30600.0, 1.0], [31000.0, 1.0], [34400.0, 1.0], [43200.0, 1.0], [64400.0, 1.0], [69600.0, 1.0], [76000.0, 1.0], [77600.0, 1.0], [97600.0, 1.0], [94400.0, 1.0], [100000.0, 1.0], [104000.0, 1.0], [106400.0, 1.0], [114400.0, 1.0], [117600.0, 1.0], [121600.0, 1.0], [125600.0, 1.0], [134400.0, 1.0], [132800.0, 1.0], [140100.0, 1.0], [69500.0, 1.0], [81500.0, 1.0], [93500.0, 1.0], [104700.0, 1.0], [109500.0, 1.0], [114300.0, 1.0], [111100.0, 1.0], [115100.0, 1.0], [119900.0, 2.0], [127100.0, 1.0], [129500.0, 1.0], [127900.0, 2.0], [51500.0, 1.0], [57500.0, 1.0], [66200.0, 1.0], [76600.0, 1.0], [98200.0, 2.0], [99000.0, 1.0], [105400.0, 1.0], [123000.0, 2.0], [123800.0, 1.0], [130200.0, 2.0], [128600.0, 1.0], [138000.0, 1.0], [134100.0, 1.0], [138900.0, 2.0], [151700.0, 1.0], [82900.0, 1.0], [86900.0, 1.0], [93300.0, 2.0], [94100.0, 1.0], [99700.0, 1.0], [110100.0, 1.0], [122100.0, 1.0], [124500.0, 1.0], [123700.0, 1.0], [126100.0, 1.0], [130100.0, 1.0], [130900.0, 1.0], [133400.0, 1.0], [17100.0, 1.0], [16500.0, 1.0], [17900.0, 1.0], [19500.0, 1.0], [19700.0, 1.0], [20300.0, 1.0], [20500.0, 2.0], [21100.0, 1.0], [22100.0, 1.0], [23300.0, 2.0], [23700.0, 1.0], [24700.0, 1.0], [25500.0, 2.0], [26500.0, 1.0], [26700.0, 1.0], [27700.0, 2.0], [29300.0, 1.0], [29900.0, 1.0], [31300.0, 1.0], [32100.0, 1.0], [131100.0, 1.0], [47000.0, 1.0], [53000.0, 1.0], [56600.0, 1.0], [61800.0, 2.0], [64600.0, 1.0], [68400.0, 1.0], [66800.0, 1.0], [90000.0, 1.0], [100400.0, 1.0], [102800.0, 1.0], [118000.0, 1.0], [122000.0, 1.0], [126800.0, 1.0], [123600.0, 1.0], [124400.0, 1.0], [130000.0, 1.0]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/staff/login", "isController": false}, {"data": [[34300.0, 1.0], [33900.0, 2.0], [36500.0, 2.0], [35900.0, 2.0], [35500.0, 1.0], [36700.0, 1.0], [37500.0, 1.0], [41300.0, 1.0], [42700.0, 1.0], [500.0, 2.0], [600.0, 2.0], [700.0, 2.0], [800.0, 5.0], [900.0, 3.0], [1000.0, 2.0], [1100.0, 2.0], [1200.0, 1.0], [1300.0, 3.0], [1400.0, 2.0], [1500.0, 7.0], [1600.0, 6.0], [1700.0, 6.0], [1800.0, 13.0], [1900.0, 11.0], [2000.0, 8.0], [2100.0, 8.0], [2300.0, 5.0], [2200.0, 6.0], [2400.0, 6.0], [2500.0, 5.0], [2600.0, 3.0], [2700.0, 1.0], [2800.0, 3.0], [2900.0, 1.0], [3000.0, 1.0], [3100.0, 2.0], [3300.0, 2.0], [3200.0, 1.0], [3500.0, 1.0], [3700.0, 2.0], [3600.0, 1.0], [3800.0, 1.0], [3900.0, 1.0], [4000.0, 1.0], [4100.0, 1.0], [4600.0, 1.0], [4400.0, 1.0], [4700.0, 1.0], [4800.0, 1.0], [4900.0, 1.0], [5000.0, 1.0], [5200.0, 1.0], [10600.0, 1.0], [18000.0, 1.0], [17600.0, 1.0], [19800.0, 1.0], [20100.0, 1.0], [21200.0, 2.0], [20800.0, 1.0], [21100.0, 1.0], [21500.0, 1.0], [22100.0, 2.0], [22400.0, 1.0], [23000.0, 2.0], [23400.0, 2.0], [23500.0, 2.0], [24200.0, 1.0], [24000.0, 1.0], [23900.0, 1.0], [24400.0, 1.0], [25200.0, 2.0], [25000.0, 1.0], [25300.0, 1.0], [24700.0, 1.0], [26000.0, 1.0], [26500.0, 2.0], [27500.0, 1.0], [27400.0, 1.0], [27100.0, 1.0], [27600.0, 1.0], [28000.0, 1.0], [28600.0, 1.0], [27800.0, 1.0], [29300.0, 1.0], [29000.0, 1.0], [30700.0, 1.0], [30500.0, 1.0], [30800.0, 1.0], [30900.0, 1.0], [31500.0, 1.0], [32500.0, 1.0], [33600.0, 1.0], [36200.0, 1.0], [36000.0, 1.0], [35200.0, 1.0], [36400.0, 1.0], [37000.0, 1.0]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/user-posts?sort_by=created_at&sort_order=descending&page=1&limit=10", "isController": false}, {"data": [[0.0, 8.0], [600.0, 17.0], [700.0, 10.0], [800.0, 4.0], [1000.0, 1.0], [1100.0, 1.0], [1300.0, 1.0], [1700.0, 1.0], [1900.0, 1.0], [9800.0, 1.0], [16500.0, 1.0], [16700.0, 1.0], [17900.0, 1.0], [18200.0, 1.0], [18600.0, 2.0], [19000.0, 1.0], [18700.0, 1.0], [19700.0, 3.0], [21100.0, 1.0], [20600.0, 2.0], [21400.0, 1.0], [21300.0, 1.0], [22000.0, 1.0], [21700.0, 1.0], [22700.0, 2.0], [22900.0, 1.0], [22600.0, 1.0], [23200.0, 1.0], [23900.0, 1.0], [24700.0, 1.0], [24800.0, 2.0], [25900.0, 2.0], [100.0, 17.0], [26200.0, 1.0], [26400.0, 1.0], [26300.0, 1.0], [26800.0, 1.0], [28100.0, 1.0], [27800.0, 1.0], [29100.0, 1.0], [30200.0, 1.0], [29700.0, 1.0], [31600.0, 2.0], [32700.0, 1.0], [34000.0, 1.0], [32900.0, 1.0], [33100.0, 1.0], [36200.0, 1.0], [37100.0, 1.0], [200.0, 5.0], [300.0, 14.0], [400.0, 24.0], [500.0, 34.0]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/categories?type=user_post", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 151700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 220.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 630.0, "series": [{"data": [[0.0, 220.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 227.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 630.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 12.541666666666666, "minX": 1.62377658E12, "maxY": 100.0, "series": [{"data": [[1.62377676E12, 100.0], [1.62377688E12, 12.541666666666666], [1.62377658E12, 26.166666666666668], [1.6237767E12, 100.0], [1.62377664E12, 76.03301886792448], [1.62377682E12, 84.51086956521739]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62377688E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 382.0, "minX": 1.0, "maxY": 151783.0, "series": [{"data": [[11.0, 586.0], [12.0, 699.0], [19.0, 650.0], [36.0, 1100.0], [37.0, 900.0], [40.0, 1845.0], [43.0, 2348.0], [45.0, 18900.0], [47.0, 1143.5], [48.0, 9086.0], [49.0, 1059.0], [50.0, 397.0], [52.0, 4339.8], [53.0, 1181.5], [54.0, 697.0], [55.0, 18470.0], [56.0, 437.0], [57.0, 1238.0], [58.0, 657.0], [61.0, 10698.5], [60.0, 18085.0], [62.0, 5158.25], [63.0, 775.0], [64.0, 5427.0], [65.0, 2108.0], [66.0, 597.5], [67.0, 475.0], [68.0, 4308.0], [69.0, 644.0], [70.0, 742.0], [71.0, 19985.0], [72.0, 483.0], [73.0, 600.0], [74.0, 625.0], [75.0, 3488.333333333333], [76.0, 4997.5], [77.0, 10981.5], [78.0, 577.0], [79.0, 10317.0], [80.0, 5935.0], [83.0, 660.0], [82.0, 21427.0], [84.0, 7499.0], [85.0, 2702.8], [86.0, 6245.0], [87.0, 402.0], [88.0, 6834.5], [90.0, 624.0], [91.0, 475.0], [92.0, 418.0], [93.0, 12079.5], [95.0, 501.0], [96.0, 11934.0], [97.0, 6852.0], [98.0, 512.5], [99.0, 649.0], [100.0, 8233.585669781925]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/staff/me", "isController": false}, {"data": [[92.47393364928914, 7327.35071090047]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/staff/me-Aggregated", "isController": false}, {"data": [[2.0, 66886.0], [3.0, 105719.0], [4.0, 78590.0], [5.0, 93504.0], [6.0, 72104.0], [7.0, 93387.0], [9.0, 81980.0], [10.0, 47287.0], [11.0, 64470.0], [12.0, 75498.0], [13.0, 99054.0], [14.0, 118732.0], [15.0, 121615.0], [16.0, 81588.0], [17.0, 51506.0], [18.0, 50670.0], [19.0, 57566.0], [20.0, 132004.0], [21.0, 61896.0], [22.0, 122160.0], [23.0, 124497.0], [24.0, 124197.0], [25.0, 138969.0], [26.0, 127995.0], [27.0, 138992.0], [28.0, 127988.0], [29.0, 132852.0], [30.0, 123668.0], [31.0, 123082.0], [33.0, 123862.0], [32.0, 126181.0], [35.0, 88582.0], [34.0, 129192.0], [37.0, 111191.0], [36.0, 151275.0], [38.0, 74906.0], [39.0, 123368.0], [40.0, 125671.0], [43.0, 151783.0], [42.0, 119988.0], [45.0, 43275.0], [44.0, 138074.0], [47.0, 69531.5], [48.0, 47071.0], [49.0, 134426.0], [50.0, 7731.0], [51.0, 6512.0], [52.0, 5764.0], [54.0, 129513.0], [56.0, 5918.5], [59.0, 10275.0], [61.0, 56647.0], [62.0, 7974.0], [63.0, 12876.5], [64.0, 12458.0], [65.0, 12779.0], [66.0, 10190.0], [67.0, 110190.0], [68.0, 13206.0], [69.0, 12467.0], [72.0, 7013.0], [73.0, 64298.0], [74.0, 71000.0], [75.0, 12047.5], [76.0, 8936.0], [77.0, 39770.0], [78.0, 69862.0], [79.0, 21730.5], [80.0, 18308.0], [83.0, 41065.0], [81.0, 6196.0], [84.0, 10963.0], [85.0, 7608.0], [87.0, 14785.0], [86.0, 139317.0], [90.0, 75886.5], [92.0, 26562.0], [94.0, 54672.66666666667], [95.0, 41129.0], [96.0, 81144.0], [97.0, 16400.666666666668], [99.0, 16156.0], [98.0, 3291.0], [100.0, 49977.40372670809], [1.0, 66219.0]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/staff/login", "isController": false}, {"data": [[80.610294117647, 55568.20220588234]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/staff/login-Aggregated", "isController": false}, {"data": [[41.0, 13400.0], [46.0, 3932.0], [51.0, 1635.0], [52.0, 4902.0], [53.0, 20101.0], [54.0, 3617.0], [55.0, 1955.6666666666667], [57.0, 23556.0], [59.0, 2175.0], [60.0, 1547.0], [64.0, 1841.0], [65.0, 11605.0], [66.0, 3312.0], [71.0, 1821.0], [70.0, 24417.0], [72.0, 12753.5], [75.0, 1898.0], [73.0, 23417.0], [76.0, 6109.0], [77.0, 1335.0], [78.0, 23959.0], [80.0, 2005.0], [82.0, 2522.5], [83.0, 26571.0], [85.0, 1646.0], [87.0, 14069.5], [88.0, 1426.0], [89.0, 1318.0], [91.0, 29004.0], [93.0, 18000.0], [94.0, 17648.0], [92.0, 27694.0], [96.0, 3117.0], [99.0, 8696.333333333334], [100.0, 11015.520000000006], [13.0, 1721.0], [21.0, 1814.0]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/user-posts?sort_by=created_at&sort_order=descending&page=1&limit=10", "isController": false}, {"data": [[92.72222222222221, 10543.23737373738]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/user-posts?sort_by=created_at&sort_order=descending&page=1&limit=10-Aggregated", "isController": false}, {"data": [[42.0, 1177.0], [47.0, 670.0], [46.0, 20673.0], [51.0, 19075.0], [50.0, 18759.0], [52.0, 568.0], [53.0, 701.0], [55.0, 690.5], [56.0, 5202.25], [59.0, 19784.0], [58.0, 17992.0], [60.0, 545.0], [63.0, 21755.0], [65.0, 580.0], [66.0, 10291.5], [67.0, 667.0], [69.0, 18647.0], [68.0, 22072.0], [72.0, 687.0], [75.0, 594.0], [77.0, 627.5], [78.0, 667.0], [82.0, 9802.0], [83.0, 450.5], [87.0, 382.0], [85.0, 23233.0], [90.0, 581.0], [89.0, 22996.0], [88.0, 22679.0], [94.0, 580.5], [99.0, 605.0], [100.0, 6496.68309859155], [14.0, 779.0], [22.0, 786.0]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/categories?type=user_post", "isController": false}, {"data": [[92.06486486486482, 6579.929729729726]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/categories?type=user_post-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 228.0, "minX": 1.62377658E12, "maxY": 22166.016666666666, "series": [{"data": [[1.62377676E12, 16089.2], [1.62377688E12, 529.6], [1.62377658E12, 975.2833333333333], [1.6237767E12, 22166.016666666666], [1.62377664E12, 10975.333333333334], [1.62377682E12, 10740.4]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.62377676E12, 4515.616666666667], [1.62377688E12, 228.0], [1.62377658E12, 294.5], [1.6237767E12, 6030.95], [1.62377664E12, 3379.9166666666665], [1.62377682E12, 2912.383333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62377688E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 914.0, "minX": 1.62377658E12, "maxY": 89535.91666666667, "series": [{"data": [[1.62377676E12, 7782.923076923076], [1.62377658E12, 1097.25], [1.6237767E12, 8414.02797202797], [1.62377664E12, 2497.2043010752686], [1.62377682E12, 12087.147540983608]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/staff/me", "isController": false}, {"data": [[1.62377676E12, 53830.466666666674], [1.62377688E12, 89535.91666666667], [1.62377658E12, 19974.5], [1.6237767E12, 49116.081081081065], [1.62377664E12, 26915.42105263158], [1.62377682E12, 84664.03773584907]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/staff/login", "isController": false}, {"data": [[1.62377676E12, 11836.943396226417], [1.62377658E12, 2416.0], [1.6237767E12, 9273.540540540542], [1.62377664E12, 4073.939393939394], [1.62377682E12, 18064.94285714286]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/user-posts?sort_by=created_at&sort_order=descending&page=1&limit=10", "isController": false}, {"data": [[1.62377676E12, 6089.733333333332], [1.62377658E12, 914.0], [1.6237767E12, 4464.534246575343], [1.62377664E12, 1708.3793103448274], [1.62377682E12, 16144.371428571425]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/categories?type=user_post", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62377688E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 913.6666666666666, "minX": 1.62377658E12, "maxY": 89534.0, "series": [{"data": [[1.62377676E12, 7782.863247863247], [1.62377658E12, 1097.0], [1.6237767E12, 8413.874125874127], [1.62377664E12, 2497.0107526881725], [1.62377682E12, 12086.65573770492]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/staff/me", "isController": false}, {"data": [[1.62377676E12, 53830.10000000001], [1.62377688E12, 89534.0], [1.62377658E12, 19972.5], [1.6237767E12, 49115.66216216217], [1.62377664E12, 26914.94736842105], [1.62377682E12, 84663.45283018869]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/staff/login", "isController": false}, {"data": [[1.62377676E12, 11787.45283018868], [1.62377658E12, 2345.6666666666665], [1.6237767E12, 9226.459459459456], [1.62377664E12, 4039.636363636363], [1.62377682E12, 17955.885714285716]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/user-posts?sort_by=created_at&sort_order=descending&page=1&limit=10", "isController": false}, {"data": [[1.62377676E12, 6089.71111111111], [1.62377658E12, 913.6666666666666], [1.6237767E12, 4464.287671232876], [1.62377664E12, 1708.1034482758619], [1.62377682E12, 16143.8]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/categories?type=user_post", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62377688E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.62377658E12, "maxY": 81.25, "series": [{"data": [[1.62377676E12, 24.239316239316246], [1.62377658E12, 0.0], [1.6237767E12, 18.678321678321673], [1.62377664E12, 9.989247311827958], [1.62377682E12, 26.688524590163933]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/staff/me", "isController": false}, {"data": [[1.62377676E12, 23.399999999999995], [1.62377688E12, 15.083333333333336], [1.62377658E12, 81.25], [1.6237767E12, 41.24324324324325], [1.62377664E12, 77.40350877192984], [1.62377682E12, 7.433962264150947]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/staff/login", "isController": false}, {"data": [[1.62377676E12, 0.0], [1.62377658E12, 0.0], [1.6237767E12, 4.108108108108108], [1.62377664E12, 0.0], [1.62377682E12, 3.857142857142857]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/user-posts?sort_by=created_at&sort_order=descending&page=1&limit=10", "isController": false}, {"data": [[1.62377676E12, 43.22222222222222], [1.62377658E12, 0.0], [1.6237767E12, 11.273972602739727], [1.62377664E12, 0.0], [1.62377682E12, 13.628571428571426]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/categories?type=user_post", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62377688E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 64.0, "minX": 1.62377658E12, "maxY": 151783.0, "series": [{"data": [[1.62377676E12, 133479.0], [1.62377688E12, 132004.0], [1.62377658E12, 29838.0], [1.6237767E12, 119957.0], [1.62377664E12, 86576.0], [1.62377682E12, 151783.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.62377676E12, 36858.0], [1.62377688E12, 124347.0], [1.62377658E12, 28054.200000000004], [1.6237767E12, 28091.0], [1.62377664E12, 22804.2], [1.62377682E12, 127991.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.62377676E12, 130227.4], [1.62377688E12, 132004.0], [1.62377658E12, 29838.0], [1.6237767E12, 111807.95000000001], [1.62377664E12, 80485.55000000002], [1.62377682E12, 151351.2]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.62377676E12, 120566.99999999999], [1.62377688E12, 130127.25], [1.62377658E12, 29838.0], [1.6237767E12, 98628.75], [1.62377664E12, 58457.89999999997], [1.62377682E12, 137180.75]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.62377676E12, 64.0], [1.62377688E12, 51506.0], [1.62377658E12, 581.0], [1.6237767E12, 70.0], [1.62377664E12, 295.0], [1.62377682E12, 160.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.62377676E12, 1815.0], [1.62377688E12, 84852.0], [1.62377658E12, 1449.0], [1.6237767E12, 2380.5], [1.62377664E12, 1559.5], [1.62377682E12, 20043.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62377688E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 650.0, "minX": 1.0, "maxY": 24752.0, "series": [{"data": [[2.0, 7026.0], [8.0, 1865.5], [9.0, 650.0], [10.0, 2958.0], [11.0, 2621.0], [3.0, 2773.5], [12.0, 2530.5], [13.0, 3546.0], [1.0, 24752.0], [4.0, 3124.0], [5.0, 6179.0], [6.0, 1703.5], [7.0, 2411.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 13.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 650.0, "minX": 1.0, "maxY": 24752.0, "series": [{"data": [[2.0, 7023.0], [8.0, 1819.0], [9.0, 650.0], [10.0, 2913.0], [11.0, 2612.0], [3.0, 2773.5], [12.0, 2517.0], [13.0, 3476.0], [1.0, 24752.0], [4.0, 3112.5], [5.0, 6179.0], [6.0, 1698.0], [7.0, 2397.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 13.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.0333333333333334, "minX": 1.62377658E12, "maxY": 6.066666666666666, "series": [{"data": [[1.62377676E12, 4.583333333333333], [1.62377658E12, 1.0333333333333334], [1.6237767E12, 6.066666666666666], [1.62377664E12, 4.466666666666667], [1.62377682E12, 1.8]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62377682E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.3, "minX": 1.62377658E12, "maxY": 6.066666666666666, "series": [{"data": [[1.62377676E12, 4.583333333333333], [1.62377688E12, 0.4], [1.62377658E12, 0.3], [1.6237767E12, 6.066666666666666], [1.62377664E12, 3.533333333333333], [1.62377682E12, 3.066666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62377688E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.62377658E12, "maxY": 2.3833333333333333, "series": [{"data": [[1.62377676E12, 1.95], [1.62377658E12, 0.13333333333333333], [1.6237767E12, 2.3833333333333333], [1.62377664E12, 1.55], [1.62377682E12, 1.0166666666666666]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/staff/me-success", "isController": false}, {"data": [[1.62377676E12, 0.8833333333333333], [1.62377658E12, 0.05], [1.6237767E12, 1.2333333333333334], [1.62377664E12, 0.55], [1.62377682E12, 0.5833333333333334]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/user-posts?sort_by=created_at&sort_order=descending&page=1&limit=10-success", "isController": false}, {"data": [[1.62377676E12, 0.75], [1.62377658E12, 0.05], [1.6237767E12, 1.2166666666666666], [1.62377664E12, 0.48333333333333334], [1.62377682E12, 0.5833333333333334]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/categories?type=user_post-success", "isController": false}, {"data": [[1.62377676E12, 1.0], [1.62377688E12, 0.4], [1.62377658E12, 0.06666666666666667], [1.6237767E12, 1.2333333333333334], [1.62377664E12, 0.95], [1.62377682E12, 0.8833333333333333]], "isOverall": false, "label": "https://sapawarga.jabarprov.go.id/api/v1/staff/login-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62377688E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.3, "minX": 1.62377658E12, "maxY": 6.066666666666666, "series": [{"data": [[1.62377676E12, 4.583333333333333], [1.62377688E12, 0.4], [1.62377658E12, 0.3], [1.6237767E12, 6.066666666666666], [1.62377664E12, 3.533333333333333], [1.62377682E12, 3.066666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62377688E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

